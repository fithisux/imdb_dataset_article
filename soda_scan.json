{"definitionName": "Soda Core CLI", "defaultDataSource": "imdb_dataset", "dataTimestamp": "2023-10-31T12:44:18+00:00", "scanStartTimestamp": "2023-10-31T12:44:18+00:00", "scanEndTimestamp": "2023-10-31T13:33:33+00:00", "hasErrors": false, "hasWarnings": false, "hasFailures": false, "metrics": [], "checks": [], "queries": [{"name": "imdb_dataset.discover-tables-find-tables-and-row-counts", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT table_name \nFROM information_schema.tables\nWHERE (table_name like '%')", "exception": null, "duration": "0:00:00.038614"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-language_codes", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'language_codes'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.013412"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-genres", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'genres'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.013352"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-countries_with_regional_codes", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'countries_with_regional_codes'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.012616"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-distribution_types", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'distribution_types'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.012865"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-job_categories", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'job_categories'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014090"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_types", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_types'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.012057"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_crew_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_crew_model_cleansed'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.012951"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_ratings_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_ratings_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014195"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_episode_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_episode_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014871"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_basics_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_basics_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.016140"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-name_basics_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'name_basics_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.012940"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_akas_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_akas_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014578"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_crew_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_crew_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.013241"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_principals_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_principals_model'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014478"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_akas_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_akas_model_cleansed'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.014398"}, {"name": "imdb_dataset.discover-tables-column-metadata-for-title_principals_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_principals_model_cleansed'\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.015703"}, {"name": "imdb_dataset.profile-columns-get-table-and-column-metadata", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT table_name, column_name, lower(data_type) as data_type \nFROM information_schema.columns \nWHERE (((table_name LIKE 'name_basics_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_akas_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_basics_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_crew_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_episode_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_principals_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_ratings_model') AND ((column_name) LIKE ('%'))))\nORDER BY ORDINAL_POSITION", "exception": null, "duration": "0:00:00.016188"}, {"name": "imdb_dataset.get_row_count_name_basics_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"name_basics_model\"", "exception": null, "duration": "0:00:04.851855"}, {"name": "imdb_dataset.profiling-name_basics_model-nconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"nconst\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"nconst\" IS NOT NULL\n        GROUP BY \"nconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:06:12.239079"}, {"name": "imdb_dataset.profiling: name_basics_model, nconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"nconst\")) as distinct_values\n    , sum(case when \"nconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"nconst\")) as avg_length\n    , min(length(\"nconst\")) as min_length\n    , max(length(\"nconst\")) as max_length\nFROM name_basics_model\n", "exception": null, "duration": "0:00:05.833970"}, {"name": "imdb_dataset.profiling-name_basics_model-primaryName-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"primaryName\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"primaryName\" IS NOT NULL\n        GROUP BY \"primaryName\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:03:44.528989"}, {"name": "imdb_dataset.profiling: name_basics_model, primaryName: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"primaryName\")) as distinct_values\n    , sum(case when \"primaryName\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryName\")) as avg_length\n    , min(length(\"primaryName\")) as min_length\n    , max(length(\"primaryName\")) as max_length\nFROM name_basics_model\n", "exception": null, "duration": "0:00:06.104876"}, {"name": "imdb_dataset.profiling-name_basics_model-birthYear-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"birthYear\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"birthYear\" IS NOT NULL\n        GROUP BY \"birthYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:15.933416"}, {"name": "imdb_dataset.profiling-name_basics_model-birthYear-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"birthYear\") as average\n    , sum(\"birthYear\") as sum\n    , var_samp(\"birthYear\") as variance\n    , stddev_samp(\"birthYear\") as standard_deviation\n    , count(distinct(\"birthYear\")) as distinct_values\n    , sum(case when \"birthYear\" is null then 1 else 0 end) as missing_values\nFROM name_basics_model\n", "exception": null, "duration": "0:00:05.192991"}, {"name": "imdb_dataset.profiling-name_basics_model-birthYear-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"birthYear\" AS value_, count(*) AS frequency_\n                           FROM name_basics_model\n                           WHERE \"birthYear\" IS NOT NULL\n                           GROUP BY \"birthYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 107.42 THEN frequency_ END),\nSUM(CASE WHEN 107.42 <= value_ AND value_ < 213.84 THEN frequency_ END),\nSUM(CASE WHEN 213.84 <= value_ AND value_ < 320.26 THEN frequency_ END),\nSUM(CASE WHEN 320.26 <= value_ AND value_ < 426.68 THEN frequency_ END),\nSUM(CASE WHEN 426.68 <= value_ AND value_ < 533.11 THEN frequency_ END),\nSUM(CASE WHEN 533.11 <= value_ AND value_ < 639.53 THEN frequency_ END),\nSUM(CASE WHEN 639.53 <= value_ AND value_ < 745.95 THEN frequency_ END),\nSUM(CASE WHEN 745.95 <= value_ AND value_ < 852.37 THEN frequency_ END),\nSUM(CASE WHEN 852.37 <= value_ AND value_ < 958.79 THEN frequency_ END),\nSUM(CASE WHEN 958.79 <= value_ AND value_ < 1065.21 THEN frequency_ END),\nSUM(CASE WHEN 1065.21 <= value_ AND value_ < 1171.63 THEN frequency_ END),\nSUM(CASE WHEN 1171.63 <= value_ AND value_ < 1278.05 THEN frequency_ END),\nSUM(CASE WHEN 1278.05 <= value_ AND value_ < 1384.47 THEN frequency_ END),\nSUM(CASE WHEN 1384.47 <= value_ AND value_ < 1490.89 THEN frequency_ END),\nSUM(CASE WHEN 1490.89 <= value_ AND value_ < 1597.32 THEN frequency_ END),\nSUM(CASE WHEN 1597.32 <= value_ AND value_ < 1703.74 THEN frequency_ END),\nSUM(CASE WHEN 1703.74 <= value_ AND value_ < 1810.16 THEN frequency_ END),\nSUM(CASE WHEN 1810.16 <= value_ AND value_ < 1916.58 THEN frequency_ END),\nSUM(CASE WHEN 1916.58 <= value_ AND value_ < 2023.0 THEN frequency_ END),\nSUM(CASE WHEN 2023.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:05.228210"}, {"name": "imdb_dataset.profiling-name_basics_model-deathYear-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"deathYear\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"deathYear\" IS NOT NULL\n        GROUP BY \"deathYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:16.333053"}, {"name": "imdb_dataset.profiling-name_basics_model-deathYear-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"deathYear\") as average\n    , sum(\"deathYear\") as sum\n    , var_samp(\"deathYear\") as variance\n    , stddev_samp(\"deathYear\") as standard_deviation\n    , count(distinct(\"deathYear\")) as distinct_values\n    , sum(case when \"deathYear\" is null then 1 else 0 end) as missing_values\nFROM name_basics_model\n", "exception": null, "duration": "0:00:05.247896"}, {"name": "imdb_dataset.profiling-name_basics_model-deathYear-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"deathYear\" AS value_, count(*) AS frequency_\n                           FROM name_basics_model\n                           WHERE \"deathYear\" IS NOT NULL\n                           GROUP BY \"deathYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 122.58 THEN frequency_ END),\nSUM(CASE WHEN 122.58 <= value_ AND value_ < 228.16 THEN frequency_ END),\nSUM(CASE WHEN 228.16 <= value_ AND value_ < 333.74 THEN frequency_ END),\nSUM(CASE WHEN 333.74 <= value_ AND value_ < 439.32 THEN frequency_ END),\nSUM(CASE WHEN 439.32 <= value_ AND value_ < 544.89 THEN frequency_ END),\nSUM(CASE WHEN 544.89 <= value_ AND value_ < 650.47 THEN frequency_ END),\nSUM(CASE WHEN 650.47 <= value_ AND value_ < 756.05 THEN frequency_ END),\nSUM(CASE WHEN 756.05 <= value_ AND value_ < 861.63 THEN frequency_ END),\nSUM(CASE WHEN 861.63 <= value_ AND value_ < 967.21 THEN frequency_ END),\nSUM(CASE WHEN 967.21 <= value_ AND value_ < 1072.79 THEN frequency_ END),\nSUM(CASE WHEN 1072.79 <= value_ AND value_ < 1178.37 THEN frequency_ END),\nSUM(CASE WHEN 1178.37 <= value_ AND value_ < 1283.95 THEN frequency_ END),\nSUM(CASE WHEN 1283.95 <= value_ AND value_ < 1389.53 THEN frequency_ END),\nSUM(CASE WHEN 1389.53 <= value_ AND value_ < 1495.11 THEN frequency_ END),\nSUM(CASE WHEN 1495.11 <= value_ AND value_ < 1600.68 THEN frequency_ END),\nSUM(CASE WHEN 1600.68 <= value_ AND value_ < 1706.26 THEN frequency_ END),\nSUM(CASE WHEN 1706.26 <= value_ AND value_ < 1811.84 THEN frequency_ END),\nSUM(CASE WHEN 1811.84 <= value_ AND value_ < 1917.42 THEN frequency_ END),\nSUM(CASE WHEN 1917.42 <= value_ AND value_ < 2023.0 THEN frequency_ END),\nSUM(CASE WHEN 2023.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:05.154310"}, {"name": "imdb_dataset.profiling-name_basics_model-primaryProfession-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"primaryProfession\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"primaryProfession\" IS NOT NULL\n        GROUP BY \"primaryProfession\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:06.547989"}, {"name": "imdb_dataset.profiling: name_basics_model, primaryProfession: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"primaryProfession\")) as distinct_values\n    , sum(case when \"primaryProfession\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryProfession\")) as avg_length\n    , min(length(\"primaryProfession\")) as min_length\n    , max(length(\"primaryProfession\")) as max_length\nFROM name_basics_model\n", "exception": null, "duration": "0:00:06.095582"}, {"name": "imdb_dataset.profiling-name_basics_model-knownForTitles-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"knownForTitles\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"knownForTitles\" IS NOT NULL\n        GROUP BY \"knownForTitles\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:06:04.647691"}, {"name": "imdb_dataset.profiling: name_basics_model, knownForTitles: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"knownForTitles\")) as distinct_values\n    , sum(case when \"knownForTitles\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"knownForTitles\")) as avg_length\n    , min(length(\"knownForTitles\")) as min_length\n    , max(length(\"knownForTitles\")) as max_length\nFROM name_basics_model\n", "exception": null, "duration": "0:00:06.681763"}, {"name": "imdb_dataset.get_row_count_title_akas_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_akas_model_cleansed\"", "exception": null, "duration": "0:00:16.009437"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-titleId-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"titleId\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"titleId\" IS NOT NULL\n        GROUP BY \"titleId\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:01:24.210001"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, titleId: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"titleId\")) as distinct_values\n    , sum(case when \"titleId\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"titleId\")) as avg_length\n    , min(length(\"titleId\")) as min_length\n    , max(length(\"titleId\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.956719"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-ordering-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"ordering\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"ordering\" IS NOT NULL\n        GROUP BY \"ordering\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:54.948335"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-ordering-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"ordering\") as average\n    , sum(\"ordering\") as sum\n    , var_samp(\"ordering\") as variance\n    , stddev_samp(\"ordering\") as standard_deviation\n    , count(distinct(\"ordering\")) as distinct_values\n    , sum(case when \"ordering\" is null then 1 else 0 end) as missing_values\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.751988"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-ordering-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"ordering\" AS value_, count(*) AS frequency_\n                           FROM title_akas_model_cleansed\n                           WHERE \"ordering\" IS NOT NULL\n                           GROUP BY \"ordering\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 14.05 THEN frequency_ END),\nSUM(CASE WHEN 14.05 <= value_ AND value_ < 27.11 THEN frequency_ END),\nSUM(CASE WHEN 27.11 <= value_ AND value_ < 40.16 THEN frequency_ END),\nSUM(CASE WHEN 40.16 <= value_ AND value_ < 53.21 THEN frequency_ END),\nSUM(CASE WHEN 53.21 <= value_ AND value_ < 66.26 THEN frequency_ END),\nSUM(CASE WHEN 66.26 <= value_ AND value_ < 79.32 THEN frequency_ END),\nSUM(CASE WHEN 79.32 <= value_ AND value_ < 92.37 THEN frequency_ END),\nSUM(CASE WHEN 92.37 <= value_ AND value_ < 105.42 THEN frequency_ END),\nSUM(CASE WHEN 105.42 <= value_ AND value_ < 118.47 THEN frequency_ END),\nSUM(CASE WHEN 118.47 <= value_ AND value_ < 131.53 THEN frequency_ END),\nSUM(CASE WHEN 131.53 <= value_ AND value_ < 144.58 THEN frequency_ END),\nSUM(CASE WHEN 144.58 <= value_ AND value_ < 157.63 THEN frequency_ END),\nSUM(CASE WHEN 157.63 <= value_ AND value_ < 170.68 THEN frequency_ END),\nSUM(CASE WHEN 170.68 <= value_ AND value_ < 183.74 THEN frequency_ END),\nSUM(CASE WHEN 183.74 <= value_ AND value_ < 196.79 THEN frequency_ END),\nSUM(CASE WHEN 196.79 <= value_ AND value_ < 209.84 THEN frequency_ END),\nSUM(CASE WHEN 209.84 <= value_ AND value_ < 222.89 THEN frequency_ END),\nSUM(CASE WHEN 222.89 <= value_ AND value_ < 235.95 THEN frequency_ END),\nSUM(CASE WHEN 235.95 <= value_ AND value_ < 249.0 THEN frequency_ END),\nSUM(CASE WHEN 249.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:17.152004"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-title-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"title\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"title\" IS NOT NULL\n        GROUP BY \"title\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:39.095383"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, title: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"title\")) as distinct_values\n    , sum(case when \"title\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"title\")) as avg_length\n    , min(length(\"title\")) as min_length\n    , max(length(\"title\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:17.685549"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-region-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"region\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"region\" IS NOT NULL\n        GROUP BY \"region\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:16.576444"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, region: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"region\")) as distinct_values\n    , sum(case when \"region\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"region\")) as avg_length\n    , min(length(\"region\")) as min_length\n    , max(length(\"region\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.765191"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-language-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"language\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"language\" IS NOT NULL\n        GROUP BY \"language\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:16.437450"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, language: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"language\")) as distinct_values\n    , sum(case when \"language\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"language\")) as avg_length\n    , min(length(\"language\")) as min_length\n    , max(length(\"language\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.419526"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-types-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"types\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"types\" IS NOT NULL\n        GROUP BY \"types\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:17.258822"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, types: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"types\")) as distinct_values\n    , sum(case when \"types\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"types\")) as avg_length\n    , min(length(\"types\")) as min_length\n    , max(length(\"types\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.964693"}, {"name": "imdb_dataset.profiling-title_akas_model_cleansed-attributes-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"attributes\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"attributes\" IS NOT NULL\n        GROUP BY \"attributes\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:16.960197"}, {"name": "imdb_dataset.profiling: title_akas_model_cleansed, attributes: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"attributes\")) as distinct_values\n    , sum(case when \"attributes\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"attributes\")) as avg_length\n    , min(length(\"attributes\")) as min_length\n    , max(length(\"attributes\")) as max_length\nFROM title_akas_model_cleansed\n", "exception": null, "duration": "0:00:16.957922"}, {"name": "imdb_dataset.get_row_count_title_basics_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_basics_model\"", "exception": null, "duration": "0:00:04.826721"}, {"name": "imdb_dataset.profiling-title_basics_model-tconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:05:13.256203"}, {"name": "imdb_dataset.profiling: title_basics_model, tconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_basics_model\n", "exception": null, "duration": "0:00:05.158135"}, {"name": "imdb_dataset.profiling-title_basics_model-titleType-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"titleType\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"titleType\" IS NOT NULL\n        GROUP BY \"titleType\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:04.725681"}, {"name": "imdb_dataset.profiling: title_basics_model, titleType: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"titleType\")) as distinct_values\n    , sum(case when \"titleType\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"titleType\")) as avg_length\n    , min(length(\"titleType\")) as min_length\n    , max(length(\"titleType\")) as max_length\nFROM title_basics_model\n", "exception": null, "duration": "0:00:04.852307"}, {"name": "imdb_dataset.profiling-title_basics_model-primaryTitle-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"primaryTitle\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"primaryTitle\" IS NOT NULL\n        GROUP BY \"primaryTitle\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:50.069454"}, {"name": "imdb_dataset.profiling: title_basics_model, primaryTitle: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"primaryTitle\")) as distinct_values\n    , sum(case when \"primaryTitle\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryTitle\")) as avg_length\n    , min(length(\"primaryTitle\")) as min_length\n    , max(length(\"primaryTitle\")) as max_length\nFROM title_basics_model\n", "exception": null, "duration": "0:00:05.911894"}, {"name": "imdb_dataset.profiling-title_basics_model-originalTitle-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"originalTitle\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"originalTitle\" IS NOT NULL\n        GROUP BY \"originalTitle\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:53.968843"}, {"name": "imdb_dataset.profiling: title_basics_model, originalTitle: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"originalTitle\")) as distinct_values\n    , sum(case when \"originalTitle\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"originalTitle\")) as avg_length\n    , min(length(\"originalTitle\")) as min_length\n    , max(length(\"originalTitle\")) as max_length\nFROM title_basics_model\n", "exception": null, "duration": "0:00:05.313444"}, {"name": "imdb_dataset.profiling-title_basics_model-startYear-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"startYear\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"startYear\" IS NOT NULL\n        GROUP BY \"startYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:15.865183"}, {"name": "imdb_dataset.profiling-title_basics_model-startYear-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"startYear\") as average\n    , sum(\"startYear\") as sum\n    , var_samp(\"startYear\") as variance\n    , stddev_samp(\"startYear\") as standard_deviation\n    , count(distinct(\"startYear\")) as distinct_values\n    , sum(case when \"startYear\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "exception": null, "duration": "0:00:04.727790"}, {"name": "imdb_dataset.profiling-title_basics_model-startYear-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"startYear\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"startYear\" IS NOT NULL\n                           GROUP BY \"startYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1882.26 THEN frequency_ END),\nSUM(CASE WHEN 1882.26 <= value_ AND value_ < 1890.53 THEN frequency_ END),\nSUM(CASE WHEN 1890.53 <= value_ AND value_ < 1898.79 THEN frequency_ END),\nSUM(CASE WHEN 1898.79 <= value_ AND value_ < 1907.05 THEN frequency_ END),\nSUM(CASE WHEN 1907.05 <= value_ AND value_ < 1915.32 THEN frequency_ END),\nSUM(CASE WHEN 1915.32 <= value_ AND value_ < 1923.58 THEN frequency_ END),\nSUM(CASE WHEN 1923.58 <= value_ AND value_ < 1931.84 THEN frequency_ END),\nSUM(CASE WHEN 1931.84 <= value_ AND value_ < 1940.11 THEN frequency_ END),\nSUM(CASE WHEN 1940.11 <= value_ AND value_ < 1948.37 THEN frequency_ END),\nSUM(CASE WHEN 1948.37 <= value_ AND value_ < 1956.63 THEN frequency_ END),\nSUM(CASE WHEN 1956.63 <= value_ AND value_ < 1964.89 THEN frequency_ END),\nSUM(CASE WHEN 1964.89 <= value_ AND value_ < 1973.16 THEN frequency_ END),\nSUM(CASE WHEN 1973.16 <= value_ AND value_ < 1981.42 THEN frequency_ END),\nSUM(CASE WHEN 1981.42 <= value_ AND value_ < 1989.68 THEN frequency_ END),\nSUM(CASE WHEN 1989.68 <= value_ AND value_ < 1997.95 THEN frequency_ END),\nSUM(CASE WHEN 1997.95 <= value_ AND value_ < 2006.21 THEN frequency_ END),\nSUM(CASE WHEN 2006.21 <= value_ AND value_ < 2014.47 THEN frequency_ END),\nSUM(CASE WHEN 2014.47 <= value_ AND value_ < 2022.74 THEN frequency_ END),\nSUM(CASE WHEN 2022.74 <= value_ AND value_ < 2031.0 THEN frequency_ END),\nSUM(CASE WHEN 2031.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:04.938572"}, {"name": "imdb_dataset.profiling-title_basics_model-endYear-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"endYear\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"endYear\" IS NOT NULL\n        GROUP BY \"endYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:14.895927"}, {"name": "imdb_dataset.profiling-title_basics_model-endYear-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"endYear\") as average\n    , sum(\"endYear\") as sum\n    , var_samp(\"endYear\") as variance\n    , stddev_samp(\"endYear\") as standard_deviation\n    , count(distinct(\"endYear\")) as distinct_values\n    , sum(case when \"endYear\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "exception": null, "duration": "0:00:05.401125"}, {"name": "imdb_dataset.profiling-title_basics_model-endYear-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"endYear\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"endYear\" IS NOT NULL\n                           GROUP BY \"endYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1912.53 THEN frequency_ END),\nSUM(CASE WHEN 1912.53 <= value_ AND value_ < 1919.05 THEN frequency_ END),\nSUM(CASE WHEN 1919.05 <= value_ AND value_ < 1925.58 THEN frequency_ END),\nSUM(CASE WHEN 1925.58 <= value_ AND value_ < 1932.11 THEN frequency_ END),\nSUM(CASE WHEN 1932.11 <= value_ AND value_ < 1938.63 THEN frequency_ END),\nSUM(CASE WHEN 1938.63 <= value_ AND value_ < 1945.16 THEN frequency_ END),\nSUM(CASE WHEN 1945.16 <= value_ AND value_ < 1951.68 THEN frequency_ END),\nSUM(CASE WHEN 1951.68 <= value_ AND value_ < 1958.21 THEN frequency_ END),\nSUM(CASE WHEN 1958.21 <= value_ AND value_ < 1964.74 THEN frequency_ END),\nSUM(CASE WHEN 1964.74 <= value_ AND value_ < 1971.26 THEN frequency_ END),\nSUM(CASE WHEN 1971.26 <= value_ AND value_ < 1977.79 THEN frequency_ END),\nSUM(CASE WHEN 1977.79 <= value_ AND value_ < 1984.32 THEN frequency_ END),\nSUM(CASE WHEN 1984.32 <= value_ AND value_ < 1990.84 THEN frequency_ END),\nSUM(CASE WHEN 1990.84 <= value_ AND value_ < 1997.37 THEN frequency_ END),\nSUM(CASE WHEN 1997.37 <= value_ AND value_ < 2003.89 THEN frequency_ END),\nSUM(CASE WHEN 2003.89 <= value_ AND value_ < 2010.42 THEN frequency_ END),\nSUM(CASE WHEN 2010.42 <= value_ AND value_ < 2016.95 THEN frequency_ END),\nSUM(CASE WHEN 2016.95 <= value_ AND value_ < 2023.47 THEN frequency_ END),\nSUM(CASE WHEN 2023.47 <= value_ AND value_ < 2030.0 THEN frequency_ END),\nSUM(CASE WHEN 2030.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:05.168507"}, {"name": "imdb_dataset.profiling-title_basics_model-runtimeMinutes-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"runtimeMinutes\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"runtimeMinutes\" IS NOT NULL\n        GROUP BY \"runtimeMinutes\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:11.922944"}, {"name": "imdb_dataset.profiling-title_basics_model-runtimeMinutes-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"runtimeMinutes\") as average\n    , sum(\"runtimeMinutes\") as sum\n    , var_samp(\"runtimeMinutes\") as variance\n    , stddev_samp(\"runtimeMinutes\") as standard_deviation\n    , count(distinct(\"runtimeMinutes\")) as distinct_values\n    , sum(case when \"runtimeMinutes\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "exception": null, "duration": "0:00:04.758617"}, {"name": "imdb_dataset.profiling-title_basics_model-runtimeMinutes-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"runtimeMinutes\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"runtimeMinutes\" IS NOT NULL\n                           GROUP BY \"runtimeMinutes\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 2859 THEN frequency_ END),\nSUM(CASE WHEN 2859 <= value_ AND value_ < 5718 THEN frequency_ END),\nSUM(CASE WHEN 5718 <= value_ AND value_ < 8577 THEN frequency_ END),\nSUM(CASE WHEN 8577 <= value_ AND value_ < 11436 THEN frequency_ END),\nSUM(CASE WHEN 11436 <= value_ AND value_ < 14295 THEN frequency_ END),\nSUM(CASE WHEN 14295 <= value_ AND value_ < 17154 THEN frequency_ END),\nSUM(CASE WHEN 17154 <= value_ AND value_ < 20013 THEN frequency_ END),\nSUM(CASE WHEN 20013 <= value_ AND value_ < 22872 THEN frequency_ END),\nSUM(CASE WHEN 22872 <= value_ AND value_ < 25731 THEN frequency_ END),\nSUM(CASE WHEN 25731 <= value_ AND value_ < 28590 THEN frequency_ END),\nSUM(CASE WHEN 28590 <= value_ AND value_ < 31449 THEN frequency_ END),\nSUM(CASE WHEN 31449 <= value_ AND value_ < 34308 THEN frequency_ END),\nSUM(CASE WHEN 34308 <= value_ AND value_ < 37167 THEN frequency_ END),\nSUM(CASE WHEN 37167 <= value_ AND value_ < 40026 THEN frequency_ END),\nSUM(CASE WHEN 40026 <= value_ AND value_ < 42885 THEN frequency_ END),\nSUM(CASE WHEN 42885 <= value_ AND value_ < 45744 THEN frequency_ END),\nSUM(CASE WHEN 45744 <= value_ AND value_ < 48603 THEN frequency_ END),\nSUM(CASE WHEN 48603 <= value_ AND value_ < 51462 THEN frequency_ END),\nSUM(CASE WHEN 51462 <= value_ AND value_ < 54321 THEN frequency_ END),\nSUM(CASE WHEN 54321 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:04.742747"}, {"name": "imdb_dataset.profiling-title_basics_model-genres-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"genres\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"genres\" IS NOT NULL\n        GROUP BY \"genres\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:06.029613"}, {"name": "imdb_dataset.profiling: title_basics_model, genres: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"genres\")) as distinct_values\n    , sum(case when \"genres\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"genres\")) as avg_length\n    , min(length(\"genres\")) as min_length\n    , max(length(\"genres\")) as max_length\nFROM title_basics_model\n", "exception": null, "duration": "0:00:05.889083"}, {"name": "imdb_dataset.get_row_count_title_crew_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_crew_model_cleansed\"", "exception": null, "duration": "0:00:24.755418"}, {"name": "imdb_dataset.profiling-title_crew_model_cleansed-tconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:01:14.386231"}, {"name": "imdb_dataset.profiling: title_crew_model_cleansed, tconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_crew_model_cleansed\n", "exception": null, "duration": "0:00:23.351844"}, {"name": "imdb_dataset.profiling-title_crew_model_cleansed-writers-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"writers\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"writers\" IS NOT NULL\n        GROUP BY \"writers\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:28.077974"}, {"name": "imdb_dataset.profiling: title_crew_model_cleansed, writers: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"writers\")) as distinct_values\n    , sum(case when \"writers\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"writers\")) as avg_length\n    , min(length(\"writers\")) as min_length\n    , max(length(\"writers\")) as max_length\nFROM title_crew_model_cleansed\n", "exception": null, "duration": "0:00:24.718167"}, {"name": "imdb_dataset.profiling-title_crew_model_cleansed-directors-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"directors\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"directors\" IS NOT NULL\n        GROUP BY \"directors\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:27.149493"}, {"name": "imdb_dataset.profiling: title_crew_model_cleansed, directors: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"directors\")) as distinct_values\n    , sum(case when \"directors\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"directors\")) as avg_length\n    , min(length(\"directors\")) as min_length\n    , max(length(\"directors\")) as max_length\nFROM title_crew_model_cleansed\n", "exception": null, "duration": "0:00:24.030354"}, {"name": "imdb_dataset.get_row_count_title_episode_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_episode_model\"", "exception": null, "duration": "0:00:01.256647"}, {"name": "imdb_dataset.profiling-title_episode_model-tconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:02:40.214589"}, {"name": "imdb_dataset.profiling: title_episode_model, tconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_episode_model\n", "exception": null, "duration": "0:00:01.553942"}, {"name": "imdb_dataset.profiling-title_episode_model-parentTconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"parentTconst\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"parentTconst\" IS NOT NULL\n        GROUP BY \"parentTconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:01.377935"}, {"name": "imdb_dataset.profiling: title_episode_model, parentTconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"parentTconst\")) as distinct_values\n    , sum(case when \"parentTconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"parentTconst\")) as avg_length\n    , min(length(\"parentTconst\")) as min_length\n    , max(length(\"parentTconst\")) as max_length\nFROM title_episode_model\n", "exception": null, "duration": "0:00:01.279424"}, {"name": "imdb_dataset.profiling-title_episode_model-seasonNumber-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"seasonNumber\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"seasonNumber\" IS NOT NULL\n        GROUP BY \"seasonNumber\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:03.969905"}, {"name": "imdb_dataset.profiling-title_episode_model-seasonNumber-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"seasonNumber\") as average\n    , sum(\"seasonNumber\") as sum\n    , var_samp(\"seasonNumber\") as variance\n    , stddev_samp(\"seasonNumber\") as standard_deviation\n    , count(distinct(\"seasonNumber\")) as distinct_values\n    , sum(case when \"seasonNumber\" is null then 1 else 0 end) as missing_values\nFROM title_episode_model\n", "exception": null, "duration": "0:00:01.539412"}, {"name": "imdb_dataset.profiling-title_episode_model-seasonNumber-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"seasonNumber\" AS value_, count(*) AS frequency_\n                           FROM title_episode_model\n                           WHERE \"seasonNumber\" IS NOT NULL\n                           GROUP BY \"seasonNumber\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 107.32 THEN frequency_ END),\nSUM(CASE WHEN 107.32 <= value_ AND value_ < 213.63 THEN frequency_ END),\nSUM(CASE WHEN 213.63 <= value_ AND value_ < 319.95 THEN frequency_ END),\nSUM(CASE WHEN 319.95 <= value_ AND value_ < 426.26 THEN frequency_ END),\nSUM(CASE WHEN 426.26 <= value_ AND value_ < 532.58 THEN frequency_ END),\nSUM(CASE WHEN 532.58 <= value_ AND value_ < 638.89 THEN frequency_ END),\nSUM(CASE WHEN 638.89 <= value_ AND value_ < 745.21 THEN frequency_ END),\nSUM(CASE WHEN 745.21 <= value_ AND value_ < 851.53 THEN frequency_ END),\nSUM(CASE WHEN 851.53 <= value_ AND value_ < 957.84 THEN frequency_ END),\nSUM(CASE WHEN 957.84 <= value_ AND value_ < 1064.16 THEN frequency_ END),\nSUM(CASE WHEN 1064.16 <= value_ AND value_ < 1170.47 THEN frequency_ END),\nSUM(CASE WHEN 1170.47 <= value_ AND value_ < 1276.79 THEN frequency_ END),\nSUM(CASE WHEN 1276.79 <= value_ AND value_ < 1383.11 THEN frequency_ END),\nSUM(CASE WHEN 1383.11 <= value_ AND value_ < 1489.42 THEN frequency_ END),\nSUM(CASE WHEN 1489.42 <= value_ AND value_ < 1595.74 THEN frequency_ END),\nSUM(CASE WHEN 1595.74 <= value_ AND value_ < 1702.05 THEN frequency_ END),\nSUM(CASE WHEN 1702.05 <= value_ AND value_ < 1808.37 THEN frequency_ END),\nSUM(CASE WHEN 1808.37 <= value_ AND value_ < 1914.68 THEN frequency_ END),\nSUM(CASE WHEN 1914.68 <= value_ AND value_ < 2021.0 THEN frequency_ END),\nSUM(CASE WHEN 2021.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:01.359873"}, {"name": "imdb_dataset.profiling-title_episode_model-episodeNumber-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"episodeNumber\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"episodeNumber\" IS NOT NULL\n        GROUP BY \"episodeNumber\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:04.654251"}, {"name": "imdb_dataset.profiling-title_episode_model-episodeNumber-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"episodeNumber\") as average\n    , sum(\"episodeNumber\") as sum\n    , var_samp(\"episodeNumber\") as variance\n    , stddev_samp(\"episodeNumber\") as standard_deviation\n    , count(distinct(\"episodeNumber\")) as distinct_values\n    , sum(case when \"episodeNumber\" is null then 1 else 0 end) as missing_values\nFROM title_episode_model\n", "exception": null, "duration": "0:00:01.340294"}, {"name": "imdb_dataset.profiling-title_episode_model-episodeNumber-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"episodeNumber\" AS value_, count(*) AS frequency_\n                           FROM title_episode_model\n                           WHERE \"episodeNumber\" IS NOT NULL\n                           GROUP BY \"episodeNumber\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 4807.05 THEN frequency_ END),\nSUM(CASE WHEN 4807.05 <= value_ AND value_ < 9614.11 THEN frequency_ END),\nSUM(CASE WHEN 9614.11 <= value_ AND value_ < 14421.16 THEN frequency_ END),\nSUM(CASE WHEN 14421.16 <= value_ AND value_ < 19228.21 THEN frequency_ END),\nSUM(CASE WHEN 19228.21 <= value_ AND value_ < 24035.26 THEN frequency_ END),\nSUM(CASE WHEN 24035.26 <= value_ AND value_ < 28842.32 THEN frequency_ END),\nSUM(CASE WHEN 28842.32 <= value_ AND value_ < 33649.37 THEN frequency_ END),\nSUM(CASE WHEN 33649.37 <= value_ AND value_ < 38456.42 THEN frequency_ END),\nSUM(CASE WHEN 38456.42 <= value_ AND value_ < 43263.47 THEN frequency_ END),\nSUM(CASE WHEN 43263.47 <= value_ AND value_ < 48070.53 THEN frequency_ END),\nSUM(CASE WHEN 48070.53 <= value_ AND value_ < 52877.58 THEN frequency_ END),\nSUM(CASE WHEN 52877.58 <= value_ AND value_ < 57684.63 THEN frequency_ END),\nSUM(CASE WHEN 57684.63 <= value_ AND value_ < 62491.68 THEN frequency_ END),\nSUM(CASE WHEN 62491.68 <= value_ AND value_ < 67298.74 THEN frequency_ END),\nSUM(CASE WHEN 67298.74 <= value_ AND value_ < 72105.79 THEN frequency_ END),\nSUM(CASE WHEN 72105.79 <= value_ AND value_ < 76912.84 THEN frequency_ END),\nSUM(CASE WHEN 76912.84 <= value_ AND value_ < 81719.89 THEN frequency_ END),\nSUM(CASE WHEN 81719.89 <= value_ AND value_ < 86526.95 THEN frequency_ END),\nSUM(CASE WHEN 86526.95 <= value_ AND value_ < 91334.0 THEN frequency_ END),\nSUM(CASE WHEN 91334.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:01.351426"}, {"name": "imdb_dataset.get_row_count_title_principals_model_cleansed", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_principals_model_cleansed\"", "exception": null, "duration": "0:00:27.720079"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-tconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:01:15.860189"}, {"name": "imdb_dataset.profiling: title_principals_model_cleansed, tconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:28.221239"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-ordering-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"ordering\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"ordering\" IS NOT NULL\n        GROUP BY \"ordering\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:01:38.083326"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-ordering-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"ordering\") as average\n    , sum(\"ordering\") as sum\n    , var_samp(\"ordering\") as variance\n    , stddev_samp(\"ordering\") as standard_deviation\n    , count(distinct(\"ordering\")) as distinct_values\n    , sum(case when \"ordering\" is null then 1 else 0 end) as missing_values\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:26.624863"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-ordering-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"ordering\" AS value_, count(*) AS frequency_\n                           FROM title_principals_model_cleansed\n                           WHERE \"ordering\" IS NOT NULL\n                           GROUP BY \"ordering\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 2 THEN frequency_ END),\nSUM(CASE WHEN 2 <= value_ AND value_ < 3 THEN frequency_ END),\nSUM(CASE WHEN 3 <= value_ AND value_ < 4 THEN frequency_ END),\nSUM(CASE WHEN 4 <= value_ AND value_ < 5 THEN frequency_ END),\nSUM(CASE WHEN 5 <= value_ AND value_ < 6 THEN frequency_ END),\nSUM(CASE WHEN 6 <= value_ AND value_ < 7 THEN frequency_ END),\nSUM(CASE WHEN 7 <= value_ AND value_ < 8 THEN frequency_ END),\nSUM(CASE WHEN 8 <= value_ AND value_ < 9 THEN frequency_ END),\nSUM(CASE WHEN 9 <= value_ AND value_ < 10 THEN frequency_ END),\nSUM(CASE WHEN 10 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:27.135680"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-nconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"nconst\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"nconst\" IS NOT NULL\n        GROUP BY \"nconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:59.788528"}, {"name": "imdb_dataset.profiling: title_principals_model_cleansed, nconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"nconst\")) as distinct_values\n    , sum(case when \"nconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"nconst\")) as avg_length\n    , min(length(\"nconst\")) as min_length\n    , max(length(\"nconst\")) as max_length\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:26.993599"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-category-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"category\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"category\" IS NOT NULL\n        GROUP BY \"category\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:27.090045"}, {"name": "imdb_dataset.profiling: title_principals_model_cleansed, category: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"category\")) as distinct_values\n    , sum(case when \"category\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"category\")) as avg_length\n    , min(length(\"category\")) as min_length\n    , max(length(\"category\")) as max_length\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:30.526471"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-job-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"job\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"job\" IS NOT NULL\n        GROUP BY \"job\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:23.944690"}, {"name": "imdb_dataset.profiling: title_principals_model_cleansed, job: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"job\")) as distinct_values\n    , sum(case when \"job\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"job\")) as avg_length\n    , min(length(\"job\")) as min_length\n    , max(length(\"job\")) as max_length\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:26.639689"}, {"name": "imdb_dataset.profiling-title_principals_model_cleansed-characters-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"characters\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"characters\" IS NOT NULL\n        GROUP BY \"characters\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:53.565686"}, {"name": "imdb_dataset.profiling: title_principals_model_cleansed, characters: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"characters\")) as distinct_values\n    , sum(case when \"characters\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"characters\")) as avg_length\n    , min(length(\"characters\")) as min_length\n    , max(length(\"characters\")) as max_length\nFROM title_principals_model_cleansed\n", "exception": null, "duration": "0:00:28.721036"}, {"name": "imdb_dataset.get_row_count_title_ratings_model", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "SELECT COUNT(*) from \"title_ratings_model\"", "exception": null, "duration": "0:00:00.194059"}, {"name": "imdb_dataset.profiling-title_ratings_model-tconst-value-frequencies-text", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:04.222770"}, {"name": "imdb_dataset.profiling: title_ratings_model, tconst: get textual aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_ratings_model\n", "exception": null, "duration": "0:00:00.255619"}, {"name": "imdb_dataset.profiling-title_ratings_model-averageRating-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"averageRating\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"averageRating\" IS NOT NULL\n        GROUP BY \"averageRating\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:00.547682"}, {"name": "imdb_dataset.profiling-title_ratings_model-averageRating-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"averageRating\") as average\n    , sum(\"averageRating\") as sum\n    , var_samp(\"averageRating\") as variance\n    , stddev_samp(\"averageRating\") as standard_deviation\n    , count(distinct(\"averageRating\")) as distinct_values\n    , sum(case when \"averageRating\" is null then 1 else 0 end) as missing_values\nFROM title_ratings_model\n", "exception": null, "duration": "0:00:00.207227"}, {"name": "imdb_dataset.profiling-title_ratings_model-averageRating-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"averageRating\" AS value_, count(*) AS frequency_\n                           FROM title_ratings_model\n                           WHERE \"averageRating\" IS NOT NULL\n                           GROUP BY \"averageRating\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1.47 THEN frequency_ END),\nSUM(CASE WHEN 1.47 <= value_ AND value_ < 1.95 THEN frequency_ END),\nSUM(CASE WHEN 1.95 <= value_ AND value_ < 2.42 THEN frequency_ END),\nSUM(CASE WHEN 2.42 <= value_ AND value_ < 2.89 THEN frequency_ END),\nSUM(CASE WHEN 2.89 <= value_ AND value_ < 3.37 THEN frequency_ END),\nSUM(CASE WHEN 3.37 <= value_ AND value_ < 3.84 THEN frequency_ END),\nSUM(CASE WHEN 3.84 <= value_ AND value_ < 4.32 THEN frequency_ END),\nSUM(CASE WHEN 4.32 <= value_ AND value_ < 4.79 THEN frequency_ END),\nSUM(CASE WHEN 4.79 <= value_ AND value_ < 5.26 THEN frequency_ END),\nSUM(CASE WHEN 5.26 <= value_ AND value_ < 5.74 THEN frequency_ END),\nSUM(CASE WHEN 5.74 <= value_ AND value_ < 6.21 THEN frequency_ END),\nSUM(CASE WHEN 6.21 <= value_ AND value_ < 6.68 THEN frequency_ END),\nSUM(CASE WHEN 6.68 <= value_ AND value_ < 7.16 THEN frequency_ END),\nSUM(CASE WHEN 7.16 <= value_ AND value_ < 7.63 THEN frequency_ END),\nSUM(CASE WHEN 7.63 <= value_ AND value_ < 8.11 THEN frequency_ END),\nSUM(CASE WHEN 8.11 <= value_ AND value_ < 8.58 THEN frequency_ END),\nSUM(CASE WHEN 8.58 <= value_ AND value_ < 9.05 THEN frequency_ END),\nSUM(CASE WHEN 9.05 <= value_ AND value_ < 9.53 THEN frequency_ END),\nSUM(CASE WHEN 9.53 <= value_ AND value_ < 10.0 THEN frequency_ END),\nSUM(CASE WHEN 10.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:00.209807"}, {"name": "imdb_dataset.profiling-title_ratings_model-numVotes-value-frequencies-numeric", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nWITH\n    value_frequencies AS (\n        SELECT \"numVotes\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"numVotes\" IS NOT NULL\n        GROUP BY \"numVotes\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "exception": null, "duration": "0:00:00.555299"}, {"name": "imdb_dataset.profiling-title_ratings_model-numVotes-profiling-aggregates", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\nSELECT\n    avg(\"numVotes\") as average\n    , sum(\"numVotes\") as sum\n    , var_samp(\"numVotes\") as variance\n    , stddev_samp(\"numVotes\") as standard_deviation\n    , count(distinct(\"numVotes\")) as distinct_values\n    , sum(case when \"numVotes\" is null then 1 else 0 end) as missing_values\nFROM title_ratings_model\n", "exception": null, "duration": "0:00:00.206686"}, {"name": "imdb_dataset.profiling-title_ratings_model-numVotes-histogram", "dataSource": "imdb_dataset", "table": null, "partition": null, "column": null, "sql": "\n           WITH\n               value_frequencies AS (\n                           SELECT \"numVotes\" AS value_, count(*) AS frequency_\n                           FROM title_ratings_model\n                           WHERE \"numVotes\" IS NOT NULL\n                           GROUP BY \"numVotes\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 147920.53 THEN frequency_ END),\nSUM(CASE WHEN 147920.53 <= value_ AND value_ < 295836.05 THEN frequency_ END),\nSUM(CASE WHEN 295836.05 <= value_ AND value_ < 443751.58 THEN frequency_ END),\nSUM(CASE WHEN 443751.58 <= value_ AND value_ < 591667.11 THEN frequency_ END),\nSUM(CASE WHEN 591667.11 <= value_ AND value_ < 739582.63 THEN frequency_ END),\nSUM(CASE WHEN 739582.63 <= value_ AND value_ < 887498.16 THEN frequency_ END),\nSUM(CASE WHEN 887498.16 <= value_ AND value_ < 1035413.68 THEN frequency_ END),\nSUM(CASE WHEN 1035413.68 <= value_ AND value_ < 1183329.21 THEN frequency_ END),\nSUM(CASE WHEN 1183329.21 <= value_ AND value_ < 1331244.74 THEN frequency_ END),\nSUM(CASE WHEN 1331244.74 <= value_ AND value_ < 1479160.26 THEN frequency_ END),\nSUM(CASE WHEN 1479160.26 <= value_ AND value_ < 1627075.79 THEN frequency_ END),\nSUM(CASE WHEN 1627075.79 <= value_ AND value_ < 1774991.32 THEN frequency_ END),\nSUM(CASE WHEN 1774991.32 <= value_ AND value_ < 1922906.84 THEN frequency_ END),\nSUM(CASE WHEN 1922906.84 <= value_ AND value_ < 2070822.37 THEN frequency_ END),\nSUM(CASE WHEN 2070822.37 <= value_ AND value_ < 2218737.89 THEN frequency_ END),\nSUM(CASE WHEN 2218737.89 <= value_ AND value_ < 2366653.42 THEN frequency_ END),\nSUM(CASE WHEN 2366653.42 <= value_ AND value_ < 2514568.95 THEN frequency_ END),\nSUM(CASE WHEN 2514568.95 <= value_ AND value_ < 2662484.47 THEN frequency_ END),\nSUM(CASE WHEN 2662484.47 <= value_ AND value_ < 2810400.0 THEN frequency_ END),\nSUM(CASE WHEN 2810400.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "exception": null, "duration": "0:00:00.208934"}], "automatedMonitoringChecks": [], "profiling": [{"table": "name_basics_model", "dataSource": "imdb_dataset", "rowCount": 12948578, "columnProfiles": [{"columnName": "nconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "nm12154323", "frequency": 1}, {"value": "nm12154370", "frequency": 1}, {"value": "nm12154406", "frequency": 1}, {"value": "nm12154412", "frequency": 1}, {"value": "nm12154415", "frequency": 1}, {"value": "nm12154458", "frequency": 1}, {"value": "nm12154464", "frequency": 1}, {"value": "nm12154494", "frequency": 1}, {"value": "nm12154502", "frequency": 1}, {"value": "nm12154518", "frequency": 1}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 12948578, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "primaryName", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "Alex", "frequency": 440}, {"value": "Michael Smith", "frequency": 410}, {"value": "David Smith", "frequency": 404}, {"value": "Chris", "frequency": 401}, {"value": "Michael", "frequency": 400}, {"value": "David", "frequency": 392}, {"value": "Mike", "frequency": 366}, {"value": "John", "frequency": 360}, {"value": "Michael Johnson", "frequency": 345}, {"value": "Chris Smith", "frequency": 341}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 10011113, "missing_count": 0, "histogram": null, "avg_length": 13, "min_length": 1, "max_length": 105}}, {"columnName": "birthYear", "profile": {"mins": [1.0, 4.0, 12.0, 21.0, 37.0], "maxs": [2023.0, 2022.0, 2021.0, 2020.0, 2019.0], "min": 1.0, "max": 2023.0, "frequent_values": [{"value": "1980", "frequency": 9724}, {"value": "1981", "frequency": 9333}, {"value": "1979", "frequency": 9317}, {"value": "1982", "frequency": 9268}, {"value": "1978", "frequency": 9243}, {"value": "1983", "frequency": 8822}, {"value": "1984", "frequency": 8739}, {"value": "1977", "frequency": 8709}, {"value": "1976", "frequency": 8703}, {"value": "1975", "frequency": 8405}], "avg": 1952.8377403623751, "sum": 1160897593.0, "stddev": 34.91775137674182, "variance": 1219.2493612079552, "distinct": 526, "missing_count": 12354111, "histogram": {"boundaries": [1.0, 107.42, 213.84, 320.26, 426.68, 533.11, 639.53, 745.95, 852.37, 958.79, 1065.21, 1171.63, 1278.05, 1384.47, 1490.89, 1597.32, 1703.74, 1810.16, 1916.58, 2023.0], "frequencies": [10, 1, 0, 3, 0, 1, 0, 1, 2, 2, 7, 7, 9, 38, 106, 131, 562, 84000, 509584, 3]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "deathYear", "profile": {"mins": [17.0, 50.0, 65.0, 66.0, 95.0], "maxs": [2023.0, 2022.0, 2021.0, 2020.0, 2019.0], "min": 17.0, "max": 2023.0, "frequent_values": [{"value": "2021", "frequency": 7060}, {"value": "2020", "frequency": 6750}, {"value": "2022", "frequency": 6641}, {"value": "2019", "frequency": 5721}, {"value": "2016", "frequency": 5507}, {"value": "2018", "frequency": 5507}, {"value": "2017", "frequency": 5425}, {"value": "2015", "frequency": 5350}, {"value": "2014", "frequency": 5022}, {"value": "2012", "frequency": 4882}], "avg": 1992.5934061962057, "sum": 441018706.0, "stddev": 34.51167727437351, "variance": 1191.0558682905091, "distinct": 468, "missing_count": 12727249, "histogram": {"boundaries": [17.0, 122.58, 228.16, 333.74, 439.32, 544.89, 650.47, 756.05, 861.63, 967.21, 1072.79, 1178.37, 1283.95, 1389.53, 1495.11, 1600.68, 1706.26, 1811.84, 1917.42, 2023.0], "frequencies": [8, 3, 2, 1, 2, 1, 1, 2, 0, 2, 2, 8, 7, 19, 63, 125, 195, 2212, 213989, 4687]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "primaryProfession", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "[]", "frequency": 2568308}, {"value": "['actor']", "frequency": 2339379}, {"value": "['actress']", "frequency": 1515709}, {"value": "['miscellaneous']", "frequency": 754943}, {"value": "['producer']", "frequency": 446703}, {"value": "['camera_department']", "frequency": 402710}, {"value": "['art_department']", "frequency": 243720}, {"value": "['writer']", "frequency": 214171}, {"value": "['sound_department']", "frequency": 205497}, {"value": "['composer']", "frequency": 160499}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 21581, "missing_count": 0, "histogram": null, "avg_length": 1, "min_length": 0, "max_length": 3}}, {"columnName": "knownForTitles", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "[]", "frequency": 1409772}, {"value": "['tt0123338']", "frequency": 8343}, {"value": "['tt22014400']", "frequency": 7566}, {"value": "['tt6168110']", "frequency": 5405}, {"value": "['tt0441074']", "frequency": 4602}, {"value": "['tt0479832']", "frequency": 3945}, {"value": "['tt0159881']", "frequency": 3760}, {"value": "['tt12693278']", "frequency": 3481}, {"value": "['tt0072584']", "frequency": 3403}, {"value": "['tt0133302']", "frequency": 3292}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 5519982, "missing_count": 0, "histogram": null, "avg_length": 1, "min_length": 0, "max_length": 6}}]}, {"table": "title_akas_model_cleansed", "dataSource": "imdb_dataset", "rowCount": 37609716, "columnProfiles": [{"columnName": "titleId", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt0088814", "frequency": 249}, {"value": "tt0168366", "frequency": 197}, {"value": "tt15837206", "frequency": 160}, {"value": "tt2872750", "frequency": 150}, {"value": "tt0099785", "frequency": 145}, {"value": "tt0104431", "frequency": 137}, {"value": "tt28108011", "frequency": 137}, {"value": "tt1067106", "frequency": 128}, {"value": "tt0076759", "frequency": 118}, {"value": "tt9335498", "frequency": 111}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 7360816, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "ordering", "profile": {"mins": [1.0, 2.0, 3.0, 4.0, 5.0], "maxs": [249.0, 248.0, 247.0, 246.0, 245.0], "min": 1.0, "max": 249.0, "frequent_values": [{"value": "1", "frequency": 7360816}, {"value": "2", "frequency": 6105998}, {"value": "3", "frequency": 4872929}, {"value": "4", "frequency": 4608232}, {"value": "5", "frequency": 4522853}, {"value": "6", "frequency": 4458847}, {"value": "7", "frequency": 4421877}, {"value": "8", "frequency": 121958}, {"value": "9", "frequency": 104431}, {"value": "10", "frequency": 91088}], "avg": 4.1642368690048075, "sum": 156615766.0, "stddev": 3.984047499261043, "variance": 15.872634476368171, "distinct": 249, "missing_count": 0, "histogram": {"boundaries": [1.0, 14.05, 27.11, 40.16, 53.21, 66.26, 79.32, 92.37, 105.42, 118.47, 131.53, 144.58, 157.63, 170.68, 183.74, 196.79, 209.84, 222.89, 235.95, 249.0], "frequencies": [36944866, 437230, 155932, 53700, 14129, 2490, 617, 261, 132, 101, 77, 46, 29, 26, 26, 14, 13, 13, 13, 1]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "title", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "Episodio #1.1", "frequency": 98888}, {"value": "Episodio #1.2", "frequency": 89342}, {"value": "Episodio #1.3", "frequency": 84594}, {"value": "Episodio #1.4", "frequency": 78320}, {"value": "Episodio #1.5", "frequency": 71706}, {"value": "Episodio #1.6", "frequency": 67742}, {"value": "Episodio #1.7", "frequency": 58892}, {"value": "Episodio #1.8", "frequency": 56440}, {"value": "Episodio #1.9", "frequency": 49498}, {"value": "\u090f\u092a\u093f\u0938\u094b\u0921 #1.1", "frequency": 49444}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 4429271, "missing_count": 0, "histogram": null, "avg_length": 16, "min_length": 1, "max_length": 831}}, {"columnName": "region", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "DE", "frequency": 4515570}, {"value": "FR", "frequency": 4514392}, {"value": "JP", "frequency": 4513129}, {"value": "IN", "frequency": 4457480}, {"value": "ES", "frequency": 4430597}, {"value": "IT", "frequency": 4410571}, {"value": "PT", "frequency": 4337710}, {"value": "US", "frequency": 1472208}, {"value": "GB", "frequency": 461121}, {"value": "CA", "frequency": 242497}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 227, "missing_count": 2225852, "histogram": null, "avg_length": 2, "min_length": 2, "max_length": 2}}, {"columnName": "language", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "ja", "frequency": 4374060}, {"value": "fr", "frequency": 4344100}, {"value": "hi", "frequency": 4310532}, {"value": "es", "frequency": 4277889}, {"value": "de", "frequency": 4277462}, {"value": "it", "frequency": 4275797}, {"value": "pt", "frequency": 4275649}, {"value": "en", "frequency": 490150}, {"value": "tr", "frequency": 36462}, {"value": "ru", "frequency": 35787}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 92, "missing_count": 6837028, "histogram": null, "avg_length": 2, "min_length": 2, "max_length": 2}}, {"columnName": "types", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "[]", "frequency": 31905884}, {"value": "['imdbDisplay']", "frequency": 3617067}, {"value": "['original']", "frequency": 1831270}, {"value": "['alternative']", "frequency": 118081}, {"value": "['working']", "frequency": 55212}, {"value": "['dvd']", "frequency": 22099}, {"value": "['video']", "frequency": 21225}, {"value": "['festival']", "frequency": 19632}, {"value": "['tv']", "frequency": 18789}, {"value": "['dvd', 'imdbDisplay']", "frequency": 218}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 24, "missing_count": 0, "histogram": null, "avg_length": 0, "min_length": 0, "max_length": 2}}, {"columnName": "attributes", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "[]", "frequency": 37341330}, {"value": "['transliterated title']", "frequency": 28401}, {"value": "['alternative spelling']", "frequency": 20337}, {"value": "['new title']", "frequency": 18411}, {"value": "['literal English title']", "frequency": 16082}, {"value": "['complete title']", "frequency": 15309}, {"value": "['literal title']", "frequency": 13193}, {"value": "['video box title']", "frequency": 11073}, {"value": "['reissue title']", "frequency": 10945}, {"value": "['short title']", "frequency": 10050}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 188, "missing_count": 0, "histogram": null, "avg_length": 0, "min_length": 0, "max_length": 2}}]}, {"table": "title_basics_model", "dataSource": "imdb_dataset", "rowCount": 10255985, "columnProfiles": [{"columnName": "tconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt9890766", "frequency": 1}, {"value": "tt9891708", "frequency": 1}, {"value": "tt9891946", "frequency": 1}, {"value": "tt9893158", "frequency": 1}, {"value": "tt9889344", "frequency": 1}, {"value": "tt9890756", "frequency": 1}, {"value": "tt9891228", "frequency": 1}, {"value": "tt9892444", "frequency": 1}, {"value": "tt9893260", "frequency": 1}, {"value": "tt9893694", "frequency": 1}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 10255985, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "titleType", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tvEpisode", "frequency": 7820524}, {"value": "short", "frequency": 957904}, {"value": "movie", "frequency": 660618}, {"value": "video", "frequency": 281628}, {"value": "tvSeries", "frequency": 250998}, {"value": "tvMovie", "frequency": 143250}, {"value": "tvMiniSeries", "frequency": 50810}, {"value": "tvSpecial", "frequency": 43941}, {"value": "videoGame", "frequency": 36263}, {"value": "tvShort", "frequency": 10048}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 11, "missing_count": 0, "histogram": null, "avg_length": 8, "min_length": 5, "max_length": 12}}, {"columnName": "primaryTitle", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "Episode #1.1", "frequency": 49489}, {"value": "Episode #1.2", "frequency": 44724}, {"value": "Episode #1.3", "frequency": 42352}, {"value": "Episode #1.4", "frequency": 39216}, {"value": "Episode #1.5", "frequency": 35903}, {"value": "Episode #1.6", "frequency": 33918}, {"value": "Episode #1.7", "frequency": 29485}, {"value": "Episode #1.8", "frequency": 28259}, {"value": "Episode #1.9", "frequency": 24783}, {"value": "Episode #1.10", "frequency": 23829}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 4614553, "missing_count": 0, "histogram": null, "avg_length": 19, "min_length": 1, "max_length": 419}}, {"columnName": "originalTitle", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "Episode #1.1", "frequency": 49489}, {"value": "Episode #1.2", "frequency": 44724}, {"value": "Episode #1.3", "frequency": 42352}, {"value": "Episode #1.4", "frequency": 39216}, {"value": "Episode #1.5", "frequency": 35903}, {"value": "Episode #1.6", "frequency": 33918}, {"value": "Episode #1.7", "frequency": 29485}, {"value": "Episode #1.8", "frequency": 28259}, {"value": "Episode #1.9", "frequency": 24783}, {"value": "Episode #1.10", "frequency": 23829}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 4637239, "missing_count": 0, "histogram": null, "avg_length": 19, "min_length": 1, "max_length": 419}}, {"columnName": "startYear", "profile": {"mins": [1874.0, 1877.0, 1878.0, 1881.0, 1882.0], "maxs": [2031.0, 2030.0, 2029.0, 2028.0, 2027.0], "min": 1874.0, "max": 2031.0, "frequent_values": [{"value": "2021", "frequency": 469445}, {"value": "2018", "frequency": 438968}, {"value": "2022", "frequency": 435224}, {"value": "2017", "frequency": 434335}, {"value": "2019", "frequency": 432691}, {"value": "2016", "frequency": 410690}, {"value": "2020", "frequency": 409447}, {"value": "2015", "frequency": 387458}, {"value": "2014", "frequency": 367402}, {"value": "2013", "frequency": 346881}], "avg": 2005.361242927449, "sum": 17815617250.0, "stddev": 20.155378026513603, "variance": 406.2392633916674, "distinct": 152, "missing_count": 1371991, "histogram": {"boundaries": [1874.0, 1882.26, 1890.53, 1898.79, 1907.05, 1915.32, 1923.58, 1931.84, 1940.11, 1948.37, 1956.63, 1964.89, 1973.16, 1981.42, 1989.68, 1997.95, 2006.21, 2014.47, 2022.74, 2031.0], "frequencies": [12, 60, 4238, 17835, 60358, 37444, 27826, 28173, 21030, 86863, 163702, 301500, 279210, 343433, 502631, 1102708, 2201614, 3418258, 287098, 1]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "endYear", "profile": {"mins": [1906.0, 1925.0, 1932.0, 1933.0, 1937.0], "maxs": [2030.0, 2028.0, 2027.0, 2026.0, 2025.0], "min": 1906.0, "max": 2030.0, "frequent_values": [{"value": "2019", "frequency": 6545}, {"value": "2018", "frequency": 6539}, {"value": "2017", "frequency": 6537}, {"value": "2020", "frequency": 6302}, {"value": "2021", "frequency": 5843}, {"value": "2022", "frequency": 5196}, {"value": "2016", "frequency": 5154}, {"value": "2015", "frequency": 4281}, {"value": "2014", "frequency": 3796}, {"value": "2023", "frequency": 3648}], "avg": 2006.371124243728, "sum": 228487550.0, "stddev": 16.399443136990648, "variance": 268.94173520338967, "distinct": 95, "missing_count": 10142104, "histogram": {"boundaries": [1906.0, 1912.53, 1919.05, 1925.58, 1932.11, 1938.63, 1945.16, 1951.68, 1958.21, 1964.74, 1971.26, 1977.79, 1984.32, 1990.84, 1997.37, 2003.89, 2010.42, 2016.95, 2023.47, 2030.0], "frequencies": [1, 0, 1, 11, 9, 14, 321, 1322, 1885, 2868, 3069, 4437, 4940, 7360, 9069, 15201, 22580, 40610, 182, 1]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "runtimeMinutes", "profile": {"mins": [0.0, 1.0, 2.0, 3.0, 4.0], "maxs": [54321.0, 51420.0, 43200.0, 35791.0, 28643.0], "min": 0.0, "max": 54321.0, "frequent_values": [{"value": "30", "frequency": 256894}, {"value": "60", "frequency": 193639}, {"value": "22", "frequency": 168590}, {"value": "15", "frequency": 85726}, {"value": "44", "frequency": 77764}, {"value": "45", "frequency": 74404}, {"value": "25", "frequency": 70499}, {"value": "10", "frequency": 66153}, {"value": "23", "frequency": 65487}, {"value": "5", "frequency": 63378}], "avg": 43.38856251263188, "sum": 134173706.0, "stddev": 73.53434409731935, "variance": 5407.299761822965, "distinct": 895, "missing_count": 7163610, "histogram": {"boundaries": [0, 2859, 5718, 8577, 11436, 14295, 17154, 20013, 22872, 25731, 28590, 31449, 34308, 37167, 40026, 42885, 45744, 48603, 51462, 54321], "frequencies": [3092329, 26, 8, 2, 3, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "genres", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "['Drama']", "frequency": 1173265}, {"value": "['Comedy']", "frequency": 697610}, {"value": "['Talk-Show']", "frequency": 638680}, {"value": "['Drama', 'Romance']", "frequency": 491358}, {"value": "['News']", "frequency": 489814}, {"value": "['Documentary']", "frequency": 489625}, {"value": "[]", "frequency": 458663}, {"value": "['Reality-TV']", "frequency": 331876}, {"value": "['Adult']", "frequency": 285078}, {"value": "['News', 'Talk-Show']", "frequency": 224703}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 2352, "missing_count": 0, "histogram": null, "avg_length": 1, "min_length": 0, "max_length": 3}}]}, {"table": "title_crew_model_cleansed", "dataSource": "imdb_dataset", "rowCount": 4546731, "columnProfiles": [{"columnName": "tconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt13432550", "frequency": 1}, {"value": "tt13432776", "frequency": 1}, {"value": "tt13432888", "frequency": 1}, {"value": "tt13432908", "frequency": 1}, {"value": "tt1343290", "frequency": 1}, {"value": "tt13432984", "frequency": 1}, {"value": "tt13433042", "frequency": 1}, {"value": "tt13433284", "frequency": 1}, {"value": "tt1343329", "frequency": 1}, {"value": "tt13433330", "frequency": 1}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 4546731, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "writers", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "['nm6352729']", "frequency": 16646}, {"value": "['nm1271987']", "frequency": 9749}, {"value": "['nm7370686']", "frequency": 9662}, {"value": "['nm1203430']", "frequency": 9642}, {"value": "['nm0596393']", "frequency": 8759}, {"value": "['nm5239844']", "frequency": 7437}, {"value": "['nm5203198']", "frequency": 6094}, {"value": "['nm4701016']", "frequency": 5899}, {"value": "['nm0068074']", "frequency": 5853}, {"value": "['nm0934807']", "frequency": 5236}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 784995, "missing_count": 0, "histogram": null, "avg_length": 1, "min_length": 1, "max_length": 492}}, {"columnName": "directors", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "['nm1203430']", "frequency": 11276}, {"value": "['nm1409127']", "frequency": 10351}, {"value": "['nm8467983']", "frequency": 8270}, {"value": "['nm5236281']", "frequency": 5889}, {"value": "['nm2544856']", "frequency": 5727}, {"value": "['nm5262331']", "frequency": 5459}, {"value": "['nm5727175']", "frequency": 5449}, {"value": "['nm7478784']", "frequency": 5293}, {"value": "['nm0600353']", "frequency": 5013}, {"value": "['nm3213427']", "frequency": 4771}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 694274, "missing_count": 0, "histogram": null, "avg_length": 1, "min_length": 1, "max_length": 492}}]}, {"table": "title_episode_model", "dataSource": "imdb_dataset", "rowCount": 7820331, "columnProfiles": [{"columnName": "tconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt8790952", "frequency": 1}, {"value": "tt8791668", "frequency": 1}, {"value": "tt8794994", "frequency": 1}, {"value": "tt8795014", "frequency": 1}, {"value": "tt8795500", "frequency": 1}, {"value": "tt8795624", "frequency": 1}, {"value": "tt8795992", "frequency": 1}, {"value": "tt8796170", "frequency": 1}, {"value": "tt8796598", "frequency": 1}, {"value": "tt8796660", "frequency": 1}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 7820331, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "parentTconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt12164062", "frequency": 18593}, {"value": "tt0058796", "frequency": 14706}, {"value": "tt0069658", "frequency": 12791}, {"value": "tt0056758", "frequency": 12440}, {"value": "tt0053494", "frequency": 10739}, {"value": "tt0988827", "frequency": 10674}, {"value": "tt0044265", "frequency": 10527}, {"value": "tt0048845", "frequency": 10345}, {"value": "tt0344642", "frequency": 10087}, {"value": "tt21883128", "frequency": 10000}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 195165, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "seasonNumber", "profile": {"mins": [1.0, 2.0, 3.0, 4.0, 5.0], "maxs": [2021.0, 2020.0, 2019.0, 2018.0, 2017.0], "min": 1.0, "max": 2021.0, "frequent_values": [{"value": "1", "frequency": 3979990}, {"value": "2", "frequency": 597601}, {"value": "3", "frequency": 340032}, {"value": "4", "frequency": 230996}, {"value": "5", "frequency": 168510}, {"value": "6", "frequency": 129635}, {"value": "7", "frequency": 103602}, {"value": "8", "frequency": 85497}, {"value": "9", "frequency": 70626}, {"value": "10", "frequency": 58817}], "avg": 3.7326240341290586, "sum": 23254244.0, "stddev": 24.14521291874001, "variance": 582.9913068912896, "distinct": 298, "missing_count": 1590332, "histogram": {"boundaries": [1.0, 107.32, 213.63, 319.95, 426.26, 532.58, 638.89, 745.21, 851.53, 957.84, 1064.16, 1170.47, 1276.79, 1383.11, 1489.42, 1595.74, 1702.05, 1808.37, 1914.68, 2021.0], "frequencies": [6226562, 2262, 345, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 807, 22]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "episodeNumber", "profile": {"mins": [0.0, 1.0, 2.0, 3.0, 4.0], "maxs": [91334.0, 72615.0, 46002.0, 40000.0, 25000.0], "min": 0.0, "max": 91334.0, "frequent_values": [{"value": "1", "frequency": 284491}, {"value": "2", "frequency": 257120}, {"value": "3", "frequency": 245372}, {"value": "4", "frequency": 229830}, {"value": "5", "frequency": 213496}, {"value": "6", "frequency": 199402}, {"value": "7", "frequency": 172011}, {"value": "8", "frequency": 161287}, {"value": "9", "frequency": 140959}, {"value": "10", "frequency": 133821}], "avg": 404.7826949891966, "sum": 2521795785.0, "stddev": 1305.6440918887504, "variance": 1704706.4946839996, "distinct": 15775, "missing_count": 1590332, "histogram": {"boundaries": [0.0, 4807.05, 9614.11, 14421.16, 19228.21, 24035.26, 28842.32, 33649.37, 38456.42, 43263.47, 48070.53, 52877.58, 57684.63, 62491.68, 67298.74, 72105.79, 76912.84, 81719.89, 86526.95, 91334.0], "frequencies": [6085730, 121421, 20496, 2343, 4, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]}, "avg_length": null, "min_length": null, "max_length": null}}]}, {"table": "title_principals_model_cleansed", "dataSource": "imdb_dataset", "rowCount": 58732961, "columnProfiles": [{"columnName": "tconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt13438240", "frequency": 10}, {"value": "tt13437806", "frequency": 10}, {"value": "tt1343755", "frequency": 10}, {"value": "tt13438108", "frequency": 10}, {"value": "tt1343831", "frequency": 10}, {"value": "tt13438380", "frequency": 10}, {"value": "tt13438384", "frequency": 10}, {"value": "tt1343855", "frequency": 10}, {"value": "tt13438498", "frequency": 10}, {"value": "tt1343852", "frequency": 10}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 9285495, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "ordering", "profile": {"mins": [1.0, 2.0, 3.0, 4.0, 5.0], "maxs": [10.0, 9.0, 8.0, 7.0, 6.0], "min": 1.0, "max": 10.0, "frequent_values": [{"value": "1", "frequency": 9285447}, {"value": "2", "frequency": 8146868}, {"value": "3", "frequency": 7227488}, {"value": "4", "frequency": 6536149}, {"value": "5", "frequency": 5909044}, {"value": "6", "frequency": 5337268}, {"value": "7", "frequency": 4817954}, {"value": "8", "frequency": 4330511}, {"value": "9", "frequency": 3830315}, {"value": "10", "frequency": 3311917}], "avg": 4.6130288237979356, "sum": 270936842.0, "stddev": 2.787018552351306, "variance": 7.767472411150368, "distinct": 10, "missing_count": 0, "histogram": {"boundaries": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "frequencies": [9285447, 8146868, 7227488, 6536149, 5909044, 5337268, 4817954, 4330511, 3830315, 3311917]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "nconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "nm0914844", "frequency": 24499}, {"value": "nm0251041", "frequency": 22545}, {"value": "nm6352729", "frequency": 20896}, {"value": "nm0934807", "frequency": 20660}, {"value": "nm0438471", "frequency": 18619}, {"value": "nm0596393", "frequency": 16898}, {"value": "nm0633202", "frequency": 16535}, {"value": "nm0438506", "frequency": 15178}, {"value": "nm8467983", "frequency": 14600}, {"value": "nm0022172", "frequency": 13443}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 5157644, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "category", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "actor", "frequency": 12974590}, {"value": "self", "frequency": 10121929}, {"value": "actress", "frequency": 10098456}, {"value": "writer", "frequency": 8239268}, {"value": "director", "frequency": 6785618}, {"value": "producer", "frequency": 3826041}, {"value": "cinematographer", "frequency": 2004647}, {"value": "composer", "frequency": 1961189}, {"value": "editor", "frequency": 1953262}, {"value": "archive_footage", "frequency": 387176}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 12, "missing_count": 0, "histogram": null, "avg_length": 6, "min_length": 4, "max_length": 19}}, {"columnName": "job", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "producer", "frequency": 3761581}, {"value": "writer", "frequency": 1059612}, {"value": "written by", "frequency": 552020}, {"value": "creator", "frequency": 406889}, {"value": "created by", "frequency": 371746}, {"value": "screenplay", "frequency": 263047}, {"value": "director of photography", "frequency": 256700}, {"value": "story", "frequency": 227916}, {"value": "head writer", "frequency": 202469}, {"value": "dialogue", "frequency": 117392}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 39949, "missing_count": 49071079, "histogram": null, "avg_length": 9, "min_length": 1, "max_length": 286}}, {"columnName": "characters", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "[]", "frequency": 30469442}, {"value": "['[\"Self\"]']", "frequency": 4237435}, {"value": "['[\"Self - Host\"]']", "frequency": 1782049}, {"value": "['[\"Self - Guest\"]']", "frequency": 310065}, {"value": "['[\"Self - Presenter\"]']", "frequency": 309455}, {"value": "['[\"Self - Panelist\"]']", "frequency": 243809}, {"value": "['[\"Self - Co-Host\"]']", "frequency": 224468}, {"value": "['[\"Self - Contestant\"]']", "frequency": 220103}, {"value": "['[\"Narrator\"]']", "frequency": 144741}, {"value": "['[\"Themselves\"]']", "frequency": 113799}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 2840110, "missing_count": 0, "histogram": null, "avg_length": 0, "min_length": 0, "max_length": 46}}]}, {"table": "title_ratings_model", "dataSource": "imdb_dataset", "rowCount": 1361677, "columnProfiles": [{"columnName": "tconst", "profile": {"mins": null, "maxs": null, "min": null, "max": null, "frequent_values": [{"value": "tt11004452", "frequency": 1}, {"value": "tt11005094", "frequency": 1}, {"value": "tt11005794", "frequency": 1}, {"value": "tt11005888", "frequency": 1}, {"value": "tt1100599", "frequency": 1}, {"value": "tt11006320", "frequency": 1}, {"value": "tt11006378", "frequency": 1}, {"value": "tt11006500", "frequency": 1}, {"value": "tt11006522", "frequency": 1}, {"value": "tt11006824", "frequency": 1}], "avg": null, "sum": null, "stddev": null, "variance": null, "distinct": 1361677, "missing_count": 0, "histogram": null, "avg_length": 9, "min_length": 9, "max_length": 10}}, {"columnName": "averageRating", "profile": {"mins": [1.0, 1.1, 1.2, 1.3, 1.4], "maxs": [10.0, 9.9, 9.8, 9.7, 9.6], "min": 1.0, "max": 10.0, "frequent_values": [{"value": "7.2", "frequency": 51124}, {"value": "7.6", "frequency": 48781}, {"value": "7.4", "frequency": 48723}, {"value": "7.8", "frequency": 47914}, {"value": "7.0", "frequency": 47001}, {"value": "7.5", "frequency": 44377}, {"value": "7.3", "frequency": 43694}, {"value": "8.0", "frequency": 43224}, {"value": "7.7", "frequency": 42374}, {"value": "6.8", "frequency": 42371}], "avg": 6.958035055303051, "sum": 9474596.299999893, "stddev": 1.3821110379146984, "variance": 1.910230921125645, "distinct": 91, "missing_count": 0, "histogram": {"boundaries": [1.0, 1.47, 1.95, 2.42, 2.89, 3.37, 3.84, 4.32, 4.79, 5.26, 5.74, 6.21, 6.68, 7.16, 7.63, 8.11, 8.58, 9.05, 9.53, 10.0], "frequencies": [2443, 2426, 4298, 5376, 10108, 16211, 24652, 29240, 55328, 81182, 124036, 126747, 198351, 236699, 203269, 111174, 78520, 33436, 11639, 6542]}, "avg_length": null, "min_length": null, "max_length": null}}, {"columnName": "numVotes", "profile": {"mins": [5.0, 6.0, 7.0, 8.0, 9.0], "maxs": [2810400.0, 2792040.0, 2478048.0, 2244888.0, 2214108.0], "min": 5.0, "max": 2810400.0, "frequent_values": [{"value": "7", "frequency": 57367}, {"value": "8", "frequency": 55825}, {"value": "6", "frequency": 52338}, {"value": "9", "frequency": 51636}, {"value": "10", "frequency": 46940}, {"value": "11", "frequency": 42734}, {"value": "12", "frequency": 38802}, {"value": "13", "frequency": 34714}, {"value": "5", "frequency": 34245}, {"value": "14", "frequency": 33334}], "avg": 1038.7995067846487, "sum": 1414509396.0, "stddev": 17578.48214856239, "variance": 309003034.6473266, "distinct": 21716, "missing_count": 0, "histogram": {"boundaries": [5.0, 147920.53, 295836.05, 443751.58, 591667.11, 739582.63, 887498.16, 1035413.68, 1183329.21, 1331244.74, 1479160.26, 1627075.79, 1774991.32, 1922906.84, 2070822.37, 2218737.89, 2366653.42, 2514568.95, 2662484.47, 2810400.0], "frequencies": [1359906, 1027, 332, 163, 100, 58, 22, 26, 10, 11, 5, 3, 1, 6, 3, 1, 1, 0, 1, 1]}, "avg_length": null, "min_length": null, "max_length": null}}]}], "metadata": [{"table": "language_codes", "dataSource": "imdb_dataset", "schema": [{"columnName": "alpha2", "sourceDataType": "varchar"}, {"columnName": "English", "sourceDataType": "varchar"}]}, {"table": "genres", "dataSource": "imdb_dataset", "schema": [{"columnName": "genre", "sourceDataType": "varchar"}]}, {"table": "countries_with_regional_codes", "dataSource": "imdb_dataset", "schema": [{"columnName": "name", "sourceDataType": "varchar"}, {"columnName": "alpha2", "sourceDataType": "varchar"}, {"columnName": "alpha-3", "sourceDataType": "varchar"}, {"columnName": "country-code", "sourceDataType": "integer"}, {"columnName": "iso_3166-2", "sourceDataType": "varchar"}, {"columnName": "region", "sourceDataType": "varchar"}, {"columnName": "sub-region", "sourceDataType": "varchar"}, {"columnName": "intermediate-region", "sourceDataType": "varchar"}, {"columnName": "region-code", "sourceDataType": "integer"}, {"columnName": "sub-region-code", "sourceDataType": "integer"}, {"columnName": "intermediate-region-code", "sourceDataType": "integer"}]}, {"table": "distribution_types", "dataSource": "imdb_dataset", "schema": [{"columnName": "distribution_type", "sourceDataType": "varchar"}]}, {"table": "job_categories", "dataSource": "imdb_dataset", "schema": [{"columnName": "job_category", "sourceDataType": "varchar"}]}, {"table": "title_types", "dataSource": "imdb_dataset", "schema": [{"columnName": "title_type", "sourceDataType": "varchar"}]}, {"table": "title_crew_model_cleansed", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "writers", "sourceDataType": "varchar[]"}, {"columnName": "directors", "sourceDataType": "varchar[]"}]}, {"table": "title_ratings_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "averageRating", "sourceDataType": "double"}, {"columnName": "numVotes", "sourceDataType": "integer"}]}, {"table": "title_episode_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "parentTconst", "sourceDataType": "varchar"}, {"columnName": "seasonNumber", "sourceDataType": "integer"}, {"columnName": "episodeNumber", "sourceDataType": "integer"}]}, {"table": "title_basics_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "titleType", "sourceDataType": "varchar"}, {"columnName": "primaryTitle", "sourceDataType": "varchar"}, {"columnName": "originalTitle", "sourceDataType": "varchar"}, {"columnName": "isAdult", "sourceDataType": "boolean"}, {"columnName": "startYear", "sourceDataType": "integer"}, {"columnName": "endYear", "sourceDataType": "integer"}, {"columnName": "runtimeMinutes", "sourceDataType": "integer"}, {"columnName": "genres", "sourceDataType": "varchar[]"}]}, {"table": "name_basics_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "nconst", "sourceDataType": "varchar"}, {"columnName": "primaryName", "sourceDataType": "varchar"}, {"columnName": "birthYear", "sourceDataType": "integer"}, {"columnName": "deathYear", "sourceDataType": "integer"}, {"columnName": "primaryProfession", "sourceDataType": "varchar[]"}, {"columnName": "knownForTitles", "sourceDataType": "varchar[]"}]}, {"table": "title_akas_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "titleId", "sourceDataType": "varchar"}, {"columnName": "ordering", "sourceDataType": "integer"}, {"columnName": "title", "sourceDataType": "varchar"}, {"columnName": "region", "sourceDataType": "varchar"}, {"columnName": "language", "sourceDataType": "varchar"}, {"columnName": "types", "sourceDataType": "varchar[]"}, {"columnName": "attributes", "sourceDataType": "varchar[]"}, {"columnName": "isOriginalTitle", "sourceDataType": "boolean"}]}, {"table": "title_crew_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "directors", "sourceDataType": "varchar[]"}, {"columnName": "writers", "sourceDataType": "varchar[]"}]}, {"table": "title_principals_model", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "ordering", "sourceDataType": "integer"}, {"columnName": "nconst", "sourceDataType": "varchar"}, {"columnName": "category", "sourceDataType": "varchar"}, {"columnName": "job", "sourceDataType": "varchar"}, {"columnName": "characters", "sourceDataType": "varchar[]"}]}, {"table": "title_akas_model_cleansed", "dataSource": "imdb_dataset", "schema": [{"columnName": "titleId", "sourceDataType": "varchar"}, {"columnName": "ordering", "sourceDataType": "integer"}, {"columnName": "title", "sourceDataType": "varchar"}, {"columnName": "region", "sourceDataType": "varchar"}, {"columnName": "language", "sourceDataType": "varchar"}, {"columnName": "types", "sourceDataType": "varchar[]"}, {"columnName": "attributes", "sourceDataType": "varchar[]"}, {"columnName": "isOriginalTitle", "sourceDataType": "boolean"}]}, {"table": "title_principals_model_cleansed", "dataSource": "imdb_dataset", "schema": [{"columnName": "tconst", "sourceDataType": "varchar"}, {"columnName": "ordering", "sourceDataType": "integer"}, {"columnName": "nconst", "sourceDataType": "varchar"}, {"columnName": "category", "sourceDataType": "varchar"}, {"columnName": "job", "sourceDataType": "varchar"}, {"columnName": "characters", "sourceDataType": "varchar[]"}]}], "logs": [{"level": "info", "message": "Soda Core 3.0.52", "timestamp": "2023-10-31T12:44:18+00:00", "index": 1}, {"level": "debug", "message": "Reading configuration file \"configuration.yaml\"", "timestamp": "2023-10-31T12:44:18+00:00", "index": 2}, {"level": "debug", "message": "Reading SodaCL file \"checks.yaml\"", "timestamp": "2023-10-31T12:44:18+00:00", "index": 3}, {"level": "debug", "message": "Scan execution starts", "timestamp": "2023-10-31T12:44:18+00:00", "index": 4}, {"level": "info", "message": "Running discover datasets for data source: imdb_dataset", "timestamp": "2023-10-31T12:44:18+00:00", "index": 5}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-find-tables-and-row-counts:\nSELECT table_name \nFROM information_schema.tables\nWHERE (table_name like '%')", "timestamp": "2023-10-31T12:44:18+00:00", "index": 6}, {"level": "info", "message": "Discovering the following tables:", "timestamp": "2023-10-31T12:44:18+00:00", "index": 7}, {"level": "info", "message": "  - language_codes", "timestamp": "2023-10-31T12:44:18+00:00", "index": 8}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-language_codes:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'language_codes'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 9}, {"level": "info", "message": "  - genres", "timestamp": "2023-10-31T12:44:18+00:00", "index": 10}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-genres:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'genres'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 11}, {"level": "info", "message": "  - countries_with_regional_codes", "timestamp": "2023-10-31T12:44:18+00:00", "index": 12}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-countries_with_regional_codes:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'countries_with_regional_codes'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 13}, {"level": "info", "message": "  - distribution_types", "timestamp": "2023-10-31T12:44:18+00:00", "index": 14}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-distribution_types:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'distribution_types'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 15}, {"level": "info", "message": "  - job_categories", "timestamp": "2023-10-31T12:44:18+00:00", "index": 16}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-job_categories:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'job_categories'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 17}, {"level": "info", "message": "  - title_types", "timestamp": "2023-10-31T12:44:18+00:00", "index": 18}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_types:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_types'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 19}, {"level": "info", "message": "  - title_crew_model_cleansed", "timestamp": "2023-10-31T12:44:18+00:00", "index": 20}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_crew_model_cleansed:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_crew_model_cleansed'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 21}, {"level": "info", "message": "  - title_ratings_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 22}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_ratings_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_ratings_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 23}, {"level": "info", "message": "  - title_episode_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 24}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_episode_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_episode_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 25}, {"level": "info", "message": "  - title_basics_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 26}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_basics_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_basics_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 27}, {"level": "info", "message": "  - name_basics_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 28}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-name_basics_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'name_basics_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 29}, {"level": "info", "message": "  - title_akas_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 30}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_akas_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_akas_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 31}, {"level": "info", "message": "  - title_crew_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 32}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_crew_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_crew_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 33}, {"level": "info", "message": "  - title_principals_model", "timestamp": "2023-10-31T12:44:18+00:00", "index": 34}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_principals_model:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_principals_model'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:18+00:00", "index": 35}, {"level": "info", "message": "  - title_akas_model_cleansed", "timestamp": "2023-10-31T12:44:19+00:00", "index": 36}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_akas_model_cleansed:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_akas_model_cleansed'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:19+00:00", "index": 37}, {"level": "info", "message": "  - title_principals_model_cleansed", "timestamp": "2023-10-31T12:44:19+00:00", "index": 38}, {"level": "debug", "message": "Query imdb_dataset.discover-tables-column-metadata-for-title_principals_model_cleansed:\nSELECT column_name, lower(data_type) as data_type, is_nullable \nFROM information_schema.columns \nWHERE (table_name) = 'title_principals_model_cleansed'\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:19+00:00", "index": 39}, {"level": "info", "message": "Running column profiling for data source: imdb_dataset", "timestamp": "2023-10-31T12:44:19+00:00", "index": 40}, {"level": "debug", "message": "Query imdb_dataset.profile-columns-get-table-and-column-metadata:\nSELECT table_name, column_name, lower(data_type) as data_type \nFROM information_schema.columns \nWHERE (((table_name LIKE 'name_basics_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_akas_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_basics_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_crew_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_episode_model') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_principals_model_cleansed') AND ((column_name) LIKE ('%'))) OR ((table_name LIKE 'title_ratings_model') AND ((column_name) LIKE ('%'))))\nORDER BY ORDINAL_POSITION", "timestamp": "2023-10-31T12:44:19+00:00", "index": 41}, {"level": "info", "message": "Profiling columns for the following tables:", "timestamp": "2023-10-31T12:44:19+00:00", "index": 42}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_name_basics_model:\nSELECT COUNT(*) from \"name_basics_model\"", "timestamp": "2023-10-31T12:44:19+00:00", "index": 43}, {"level": "info", "message": "  - name_basics_model", "timestamp": "2023-10-31T12:44:23+00:00", "index": 44}, {"level": "debug", "message": "Profiling column nconst of name_basics_model", "timestamp": "2023-10-31T12:44:23+00:00", "index": 45}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-nconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"nconst\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"nconst\" IS NOT NULL\n        GROUP BY \"nconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:44:23+00:00", "index": 46}, {"level": "debug", "message": "Query imdb_dataset.profiling: name_basics_model, nconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"nconst\")) as distinct_values\n    , sum(case when \"nconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"nconst\")) as avg_length\n    , min(length(\"nconst\")) as min_length\n    , max(length(\"nconst\")) as max_length\nFROM name_basics_model\n", "timestamp": "2023-10-31T12:50:36+00:00", "index": 47}, {"level": "debug", "message": "Profiling column primaryName of name_basics_model", "timestamp": "2023-10-31T12:50:41+00:00", "index": 48}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-primaryName-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"primaryName\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"primaryName\" IS NOT NULL\n        GROUP BY \"primaryName\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:50:41+00:00", "index": 49}, {"level": "debug", "message": "Query imdb_dataset.profiling: name_basics_model, primaryName: get textual aggregates:\n\nSELECT\n    count(distinct(\"primaryName\")) as distinct_values\n    , sum(case when \"primaryName\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryName\")) as avg_length\n    , min(length(\"primaryName\")) as min_length\n    , max(length(\"primaryName\")) as max_length\nFROM name_basics_model\n", "timestamp": "2023-10-31T12:54:26+00:00", "index": 50}, {"level": "debug", "message": "Profiling column birthYear of name_basics_model", "timestamp": "2023-10-31T12:54:32+00:00", "index": 51}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-birthYear-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"birthYear\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"birthYear\" IS NOT NULL\n        GROUP BY \"birthYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:54:32+00:00", "index": 52}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-birthYear-profiling-aggregates:\n\nSELECT\n    avg(\"birthYear\") as average\n    , sum(\"birthYear\") as sum\n    , var_samp(\"birthYear\") as variance\n    , stddev_samp(\"birthYear\") as standard_deviation\n    , count(distinct(\"birthYear\")) as distinct_values\n    , sum(case when \"birthYear\" is null then 1 else 0 end) as missing_values\nFROM name_basics_model\n", "timestamp": "2023-10-31T12:54:48+00:00", "index": 53}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-birthYear-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"birthYear\" AS value_, count(*) AS frequency_\n                           FROM name_basics_model\n                           WHERE \"birthYear\" IS NOT NULL\n                           GROUP BY \"birthYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 107.42 THEN frequency_ END),\nSUM(CASE WHEN 107.42 <= value_ AND value_ < 213.84 THEN frequency_ END),\nSUM(CASE WHEN 213.84 <= value_ AND value_ < 320.26 THEN frequency_ END),\nSUM(CASE WHEN 320.26 <= value_ AND value_ < 426.68 THEN frequency_ END),\nSUM(CASE WHEN 426.68 <= value_ AND value_ < 533.11 THEN frequency_ END),\nSUM(CASE WHEN 533.11 <= value_ AND value_ < 639.53 THEN frequency_ END),\nSUM(CASE WHEN 639.53 <= value_ AND value_ < 745.95 THEN frequency_ END),\nSUM(CASE WHEN 745.95 <= value_ AND value_ < 852.37 THEN frequency_ END),\nSUM(CASE WHEN 852.37 <= value_ AND value_ < 958.79 THEN frequency_ END),\nSUM(CASE WHEN 958.79 <= value_ AND value_ < 1065.21 THEN frequency_ END),\nSUM(CASE WHEN 1065.21 <= value_ AND value_ < 1171.63 THEN frequency_ END),\nSUM(CASE WHEN 1171.63 <= value_ AND value_ < 1278.05 THEN frequency_ END),\nSUM(CASE WHEN 1278.05 <= value_ AND value_ < 1384.47 THEN frequency_ END),\nSUM(CASE WHEN 1384.47 <= value_ AND value_ < 1490.89 THEN frequency_ END),\nSUM(CASE WHEN 1490.89 <= value_ AND value_ < 1597.32 THEN frequency_ END),\nSUM(CASE WHEN 1597.32 <= value_ AND value_ < 1703.74 THEN frequency_ END),\nSUM(CASE WHEN 1703.74 <= value_ AND value_ < 1810.16 THEN frequency_ END),\nSUM(CASE WHEN 1810.16 <= value_ AND value_ < 1916.58 THEN frequency_ END),\nSUM(CASE WHEN 1916.58 <= value_ AND value_ < 2023.0 THEN frequency_ END),\nSUM(CASE WHEN 2023.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T12:54:53+00:00", "index": 54}, {"level": "debug", "message": "Profiling column deathYear of name_basics_model", "timestamp": "2023-10-31T12:54:58+00:00", "index": 55}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-deathYear-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"deathYear\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"deathYear\" IS NOT NULL\n        GROUP BY \"deathYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:54:58+00:00", "index": 56}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-deathYear-profiling-aggregates:\n\nSELECT\n    avg(\"deathYear\") as average\n    , sum(\"deathYear\") as sum\n    , var_samp(\"deathYear\") as variance\n    , stddev_samp(\"deathYear\") as standard_deviation\n    , count(distinct(\"deathYear\")) as distinct_values\n    , sum(case when \"deathYear\" is null then 1 else 0 end) as missing_values\nFROM name_basics_model\n", "timestamp": "2023-10-31T12:55:15+00:00", "index": 57}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-deathYear-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"deathYear\" AS value_, count(*) AS frequency_\n                           FROM name_basics_model\n                           WHERE \"deathYear\" IS NOT NULL\n                           GROUP BY \"deathYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 122.58 THEN frequency_ END),\nSUM(CASE WHEN 122.58 <= value_ AND value_ < 228.16 THEN frequency_ END),\nSUM(CASE WHEN 228.16 <= value_ AND value_ < 333.74 THEN frequency_ END),\nSUM(CASE WHEN 333.74 <= value_ AND value_ < 439.32 THEN frequency_ END),\nSUM(CASE WHEN 439.32 <= value_ AND value_ < 544.89 THEN frequency_ END),\nSUM(CASE WHEN 544.89 <= value_ AND value_ < 650.47 THEN frequency_ END),\nSUM(CASE WHEN 650.47 <= value_ AND value_ < 756.05 THEN frequency_ END),\nSUM(CASE WHEN 756.05 <= value_ AND value_ < 861.63 THEN frequency_ END),\nSUM(CASE WHEN 861.63 <= value_ AND value_ < 967.21 THEN frequency_ END),\nSUM(CASE WHEN 967.21 <= value_ AND value_ < 1072.79 THEN frequency_ END),\nSUM(CASE WHEN 1072.79 <= value_ AND value_ < 1178.37 THEN frequency_ END),\nSUM(CASE WHEN 1178.37 <= value_ AND value_ < 1283.95 THEN frequency_ END),\nSUM(CASE WHEN 1283.95 <= value_ AND value_ < 1389.53 THEN frequency_ END),\nSUM(CASE WHEN 1389.53 <= value_ AND value_ < 1495.11 THEN frequency_ END),\nSUM(CASE WHEN 1495.11 <= value_ AND value_ < 1600.68 THEN frequency_ END),\nSUM(CASE WHEN 1600.68 <= value_ AND value_ < 1706.26 THEN frequency_ END),\nSUM(CASE WHEN 1706.26 <= value_ AND value_ < 1811.84 THEN frequency_ END),\nSUM(CASE WHEN 1811.84 <= value_ AND value_ < 1917.42 THEN frequency_ END),\nSUM(CASE WHEN 1917.42 <= value_ AND value_ < 2023.0 THEN frequency_ END),\nSUM(CASE WHEN 2023.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T12:55:20+00:00", "index": 58}, {"level": "debug", "message": "Profiling column primaryProfession of name_basics_model", "timestamp": "2023-10-31T12:55:25+00:00", "index": 59}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-primaryProfession-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"primaryProfession\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"primaryProfession\" IS NOT NULL\n        GROUP BY \"primaryProfession\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:55:25+00:00", "index": 60}, {"level": "debug", "message": "Query imdb_dataset.profiling: name_basics_model, primaryProfession: get textual aggregates:\n\nSELECT\n    count(distinct(\"primaryProfession\")) as distinct_values\n    , sum(case when \"primaryProfession\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryProfession\")) as avg_length\n    , min(length(\"primaryProfession\")) as min_length\n    , max(length(\"primaryProfession\")) as max_length\nFROM name_basics_model\n", "timestamp": "2023-10-31T12:55:32+00:00", "index": 61}, {"level": "debug", "message": "Profiling column knownForTitles of name_basics_model", "timestamp": "2023-10-31T12:55:38+00:00", "index": 62}, {"level": "debug", "message": "Query imdb_dataset.profiling-name_basics_model-knownForTitles-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"knownForTitles\" AS value_, count(*) AS frequency_\n        FROM name_basics_model\n        WHERE \"knownForTitles\" IS NOT NULL\n        GROUP BY \"knownForTitles\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T12:55:38+00:00", "index": 63}, {"level": "debug", "message": "Query imdb_dataset.profiling: name_basics_model, knownForTitles: get textual aggregates:\n\nSELECT\n    count(distinct(\"knownForTitles\")) as distinct_values\n    , sum(case when \"knownForTitles\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"knownForTitles\")) as avg_length\n    , min(length(\"knownForTitles\")) as min_length\n    , max(length(\"knownForTitles\")) as max_length\nFROM name_basics_model\n", "timestamp": "2023-10-31T13:01:42+00:00", "index": 64}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_akas_model_cleansed:\nSELECT COUNT(*) from \"title_akas_model_cleansed\"", "timestamp": "2023-10-31T13:01:49+00:00", "index": 65}, {"level": "info", "message": "  - title_akas_model_cleansed", "timestamp": "2023-10-31T13:02:05+00:00", "index": 66}, {"level": "debug", "message": "Profiling column titleId of title_akas_model_cleansed", "timestamp": "2023-10-31T13:02:05+00:00", "index": 67}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-titleId-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"titleId\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"titleId\" IS NOT NULL\n        GROUP BY \"titleId\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:02:05+00:00", "index": 68}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, titleId: get textual aggregates:\n\nSELECT\n    count(distinct(\"titleId\")) as distinct_values\n    , sum(case when \"titleId\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"titleId\")) as avg_length\n    , min(length(\"titleId\")) as min_length\n    , max(length(\"titleId\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:03:29+00:00", "index": 69}, {"level": "debug", "message": "Profiling column ordering of title_akas_model_cleansed", "timestamp": "2023-10-31T13:03:46+00:00", "index": 70}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-ordering-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"ordering\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"ordering\" IS NOT NULL\n        GROUP BY \"ordering\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:03:46+00:00", "index": 71}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-ordering-profiling-aggregates:\n\nSELECT\n    avg(\"ordering\") as average\n    , sum(\"ordering\") as sum\n    , var_samp(\"ordering\") as variance\n    , stddev_samp(\"ordering\") as standard_deviation\n    , count(distinct(\"ordering\")) as distinct_values\n    , sum(case when \"ordering\" is null then 1 else 0 end) as missing_values\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:04:41+00:00", "index": 72}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-ordering-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"ordering\" AS value_, count(*) AS frequency_\n                           FROM title_akas_model_cleansed\n                           WHERE \"ordering\" IS NOT NULL\n                           GROUP BY \"ordering\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 14.05 THEN frequency_ END),\nSUM(CASE WHEN 14.05 <= value_ AND value_ < 27.11 THEN frequency_ END),\nSUM(CASE WHEN 27.11 <= value_ AND value_ < 40.16 THEN frequency_ END),\nSUM(CASE WHEN 40.16 <= value_ AND value_ < 53.21 THEN frequency_ END),\nSUM(CASE WHEN 53.21 <= value_ AND value_ < 66.26 THEN frequency_ END),\nSUM(CASE WHEN 66.26 <= value_ AND value_ < 79.32 THEN frequency_ END),\nSUM(CASE WHEN 79.32 <= value_ AND value_ < 92.37 THEN frequency_ END),\nSUM(CASE WHEN 92.37 <= value_ AND value_ < 105.42 THEN frequency_ END),\nSUM(CASE WHEN 105.42 <= value_ AND value_ < 118.47 THEN frequency_ END),\nSUM(CASE WHEN 118.47 <= value_ AND value_ < 131.53 THEN frequency_ END),\nSUM(CASE WHEN 131.53 <= value_ AND value_ < 144.58 THEN frequency_ END),\nSUM(CASE WHEN 144.58 <= value_ AND value_ < 157.63 THEN frequency_ END),\nSUM(CASE WHEN 157.63 <= value_ AND value_ < 170.68 THEN frequency_ END),\nSUM(CASE WHEN 170.68 <= value_ AND value_ < 183.74 THEN frequency_ END),\nSUM(CASE WHEN 183.74 <= value_ AND value_ < 196.79 THEN frequency_ END),\nSUM(CASE WHEN 196.79 <= value_ AND value_ < 209.84 THEN frequency_ END),\nSUM(CASE WHEN 209.84 <= value_ AND value_ < 222.89 THEN frequency_ END),\nSUM(CASE WHEN 222.89 <= value_ AND value_ < 235.95 THEN frequency_ END),\nSUM(CASE WHEN 235.95 <= value_ AND value_ < 249.0 THEN frequency_ END),\nSUM(CASE WHEN 249.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:04:58+00:00", "index": 73}, {"level": "debug", "message": "Profiling column title of title_akas_model_cleansed", "timestamp": "2023-10-31T13:05:15+00:00", "index": 74}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-title-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"title\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"title\" IS NOT NULL\n        GROUP BY \"title\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:05:15+00:00", "index": 75}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, title: get textual aggregates:\n\nSELECT\n    count(distinct(\"title\")) as distinct_values\n    , sum(case when \"title\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"title\")) as avg_length\n    , min(length(\"title\")) as min_length\n    , max(length(\"title\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:05:54+00:00", "index": 76}, {"level": "debug", "message": "Profiling column region of title_akas_model_cleansed", "timestamp": "2023-10-31T13:06:12+00:00", "index": 77}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-region-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"region\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"region\" IS NOT NULL\n        GROUP BY \"region\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:06:12+00:00", "index": 78}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, region: get textual aggregates:\n\nSELECT\n    count(distinct(\"region\")) as distinct_values\n    , sum(case when \"region\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"region\")) as avg_length\n    , min(length(\"region\")) as min_length\n    , max(length(\"region\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:06:29+00:00", "index": 79}, {"level": "debug", "message": "Profiling column language of title_akas_model_cleansed", "timestamp": "2023-10-31T13:06:45+00:00", "index": 80}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-language-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"language\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"language\" IS NOT NULL\n        GROUP BY \"language\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:06:45+00:00", "index": 81}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, language: get textual aggregates:\n\nSELECT\n    count(distinct(\"language\")) as distinct_values\n    , sum(case when \"language\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"language\")) as avg_length\n    , min(length(\"language\")) as min_length\n    , max(length(\"language\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:07:02+00:00", "index": 82}, {"level": "debug", "message": "Profiling column types of title_akas_model_cleansed", "timestamp": "2023-10-31T13:07:18+00:00", "index": 83}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-types-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"types\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"types\" IS NOT NULL\n        GROUP BY \"types\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:07:18+00:00", "index": 84}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, types: get textual aggregates:\n\nSELECT\n    count(distinct(\"types\")) as distinct_values\n    , sum(case when \"types\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"types\")) as avg_length\n    , min(length(\"types\")) as min_length\n    , max(length(\"types\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:07:35+00:00", "index": 85}, {"level": "debug", "message": "Profiling column attributes of title_akas_model_cleansed", "timestamp": "2023-10-31T13:07:52+00:00", "index": 86}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_akas_model_cleansed-attributes-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"attributes\" AS value_, count(*) AS frequency_\n        FROM title_akas_model_cleansed\n        WHERE \"attributes\" IS NOT NULL\n        GROUP BY \"attributes\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:07:52+00:00", "index": 87}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_akas_model_cleansed, attributes: get textual aggregates:\n\nSELECT\n    count(distinct(\"attributes\")) as distinct_values\n    , sum(case when \"attributes\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"attributes\")) as avg_length\n    , min(length(\"attributes\")) as min_length\n    , max(length(\"attributes\")) as max_length\nFROM title_akas_model_cleansed\n", "timestamp": "2023-10-31T13:08:09+00:00", "index": 88}, {"level": "warning", "message": "Column 'title_akas_model_cleansed.isOriginalTitle' was not profiled because column data type 'boolean' is not in supported profiling data types", "timestamp": "2023-10-31T13:08:26+00:00", "index": 89}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_basics_model:\nSELECT COUNT(*) from \"title_basics_model\"", "timestamp": "2023-10-31T13:08:26+00:00", "index": 90}, {"level": "info", "message": "  - title_basics_model", "timestamp": "2023-10-31T13:08:31+00:00", "index": 91}, {"level": "debug", "message": "Profiling column tconst of title_basics_model", "timestamp": "2023-10-31T13:08:31+00:00", "index": 92}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-tconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:08:31+00:00", "index": 93}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_basics_model, tconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:13:44+00:00", "index": 94}, {"level": "debug", "message": "Profiling column titleType of title_basics_model", "timestamp": "2023-10-31T13:13:50+00:00", "index": 95}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-titleType-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"titleType\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"titleType\" IS NOT NULL\n        GROUP BY \"titleType\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:13:50+00:00", "index": 96}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_basics_model, titleType: get textual aggregates:\n\nSELECT\n    count(distinct(\"titleType\")) as distinct_values\n    , sum(case when \"titleType\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"titleType\")) as avg_length\n    , min(length(\"titleType\")) as min_length\n    , max(length(\"titleType\")) as max_length\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:13:54+00:00", "index": 97}, {"level": "debug", "message": "Profiling column primaryTitle of title_basics_model", "timestamp": "2023-10-31T13:13:59+00:00", "index": 98}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-primaryTitle-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"primaryTitle\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"primaryTitle\" IS NOT NULL\n        GROUP BY \"primaryTitle\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:13:59+00:00", "index": 99}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_basics_model, primaryTitle: get textual aggregates:\n\nSELECT\n    count(distinct(\"primaryTitle\")) as distinct_values\n    , sum(case when \"primaryTitle\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"primaryTitle\")) as avg_length\n    , min(length(\"primaryTitle\")) as min_length\n    , max(length(\"primaryTitle\")) as max_length\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:14:49+00:00", "index": 100}, {"level": "debug", "message": "Profiling column originalTitle of title_basics_model", "timestamp": "2023-10-31T13:14:55+00:00", "index": 101}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-originalTitle-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"originalTitle\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"originalTitle\" IS NOT NULL\n        GROUP BY \"originalTitle\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:14:55+00:00", "index": 102}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_basics_model, originalTitle: get textual aggregates:\n\nSELECT\n    count(distinct(\"originalTitle\")) as distinct_values\n    , sum(case when \"originalTitle\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"originalTitle\")) as avg_length\n    , min(length(\"originalTitle\")) as min_length\n    , max(length(\"originalTitle\")) as max_length\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:15:49+00:00", "index": 103}, {"level": "warning", "message": "Column 'title_basics_model.isAdult' was not profiled because column data type 'boolean' is not in supported profiling data types", "timestamp": "2023-10-31T13:15:54+00:00", "index": 104}, {"level": "debug", "message": "Profiling column startYear of title_basics_model", "timestamp": "2023-10-31T13:15:54+00:00", "index": 105}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-startYear-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"startYear\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"startYear\" IS NOT NULL\n        GROUP BY \"startYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:15:54+00:00", "index": 106}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-startYear-profiling-aggregates:\n\nSELECT\n    avg(\"startYear\") as average\n    , sum(\"startYear\") as sum\n    , var_samp(\"startYear\") as variance\n    , stddev_samp(\"startYear\") as standard_deviation\n    , count(distinct(\"startYear\")) as distinct_values\n    , sum(case when \"startYear\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:16:10+00:00", "index": 107}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-startYear-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"startYear\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"startYear\" IS NOT NULL\n                           GROUP BY \"startYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1882.26 THEN frequency_ END),\nSUM(CASE WHEN 1882.26 <= value_ AND value_ < 1890.53 THEN frequency_ END),\nSUM(CASE WHEN 1890.53 <= value_ AND value_ < 1898.79 THEN frequency_ END),\nSUM(CASE WHEN 1898.79 <= value_ AND value_ < 1907.05 THEN frequency_ END),\nSUM(CASE WHEN 1907.05 <= value_ AND value_ < 1915.32 THEN frequency_ END),\nSUM(CASE WHEN 1915.32 <= value_ AND value_ < 1923.58 THEN frequency_ END),\nSUM(CASE WHEN 1923.58 <= value_ AND value_ < 1931.84 THEN frequency_ END),\nSUM(CASE WHEN 1931.84 <= value_ AND value_ < 1940.11 THEN frequency_ END),\nSUM(CASE WHEN 1940.11 <= value_ AND value_ < 1948.37 THEN frequency_ END),\nSUM(CASE WHEN 1948.37 <= value_ AND value_ < 1956.63 THEN frequency_ END),\nSUM(CASE WHEN 1956.63 <= value_ AND value_ < 1964.89 THEN frequency_ END),\nSUM(CASE WHEN 1964.89 <= value_ AND value_ < 1973.16 THEN frequency_ END),\nSUM(CASE WHEN 1973.16 <= value_ AND value_ < 1981.42 THEN frequency_ END),\nSUM(CASE WHEN 1981.42 <= value_ AND value_ < 1989.68 THEN frequency_ END),\nSUM(CASE WHEN 1989.68 <= value_ AND value_ < 1997.95 THEN frequency_ END),\nSUM(CASE WHEN 1997.95 <= value_ AND value_ < 2006.21 THEN frequency_ END),\nSUM(CASE WHEN 2006.21 <= value_ AND value_ < 2014.47 THEN frequency_ END),\nSUM(CASE WHEN 2014.47 <= value_ AND value_ < 2022.74 THEN frequency_ END),\nSUM(CASE WHEN 2022.74 <= value_ AND value_ < 2031.0 THEN frequency_ END),\nSUM(CASE WHEN 2031.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:16:15+00:00", "index": 108}, {"level": "debug", "message": "Profiling column endYear of title_basics_model", "timestamp": "2023-10-31T13:16:20+00:00", "index": 109}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-endYear-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"endYear\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"endYear\" IS NOT NULL\n        GROUP BY \"endYear\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:16:20+00:00", "index": 110}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-endYear-profiling-aggregates:\n\nSELECT\n    avg(\"endYear\") as average\n    , sum(\"endYear\") as sum\n    , var_samp(\"endYear\") as variance\n    , stddev_samp(\"endYear\") as standard_deviation\n    , count(distinct(\"endYear\")) as distinct_values\n    , sum(case when \"endYear\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:16:35+00:00", "index": 111}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-endYear-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"endYear\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"endYear\" IS NOT NULL\n                           GROUP BY \"endYear\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1912.53 THEN frequency_ END),\nSUM(CASE WHEN 1912.53 <= value_ AND value_ < 1919.05 THEN frequency_ END),\nSUM(CASE WHEN 1919.05 <= value_ AND value_ < 1925.58 THEN frequency_ END),\nSUM(CASE WHEN 1925.58 <= value_ AND value_ < 1932.11 THEN frequency_ END),\nSUM(CASE WHEN 1932.11 <= value_ AND value_ < 1938.63 THEN frequency_ END),\nSUM(CASE WHEN 1938.63 <= value_ AND value_ < 1945.16 THEN frequency_ END),\nSUM(CASE WHEN 1945.16 <= value_ AND value_ < 1951.68 THEN frequency_ END),\nSUM(CASE WHEN 1951.68 <= value_ AND value_ < 1958.21 THEN frequency_ END),\nSUM(CASE WHEN 1958.21 <= value_ AND value_ < 1964.74 THEN frequency_ END),\nSUM(CASE WHEN 1964.74 <= value_ AND value_ < 1971.26 THEN frequency_ END),\nSUM(CASE WHEN 1971.26 <= value_ AND value_ < 1977.79 THEN frequency_ END),\nSUM(CASE WHEN 1977.79 <= value_ AND value_ < 1984.32 THEN frequency_ END),\nSUM(CASE WHEN 1984.32 <= value_ AND value_ < 1990.84 THEN frequency_ END),\nSUM(CASE WHEN 1990.84 <= value_ AND value_ < 1997.37 THEN frequency_ END),\nSUM(CASE WHEN 1997.37 <= value_ AND value_ < 2003.89 THEN frequency_ END),\nSUM(CASE WHEN 2003.89 <= value_ AND value_ < 2010.42 THEN frequency_ END),\nSUM(CASE WHEN 2010.42 <= value_ AND value_ < 2016.95 THEN frequency_ END),\nSUM(CASE WHEN 2016.95 <= value_ AND value_ < 2023.47 THEN frequency_ END),\nSUM(CASE WHEN 2023.47 <= value_ AND value_ < 2030.0 THEN frequency_ END),\nSUM(CASE WHEN 2030.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:16:40+00:00", "index": 112}, {"level": "debug", "message": "Profiling column runtimeMinutes of title_basics_model", "timestamp": "2023-10-31T13:16:45+00:00", "index": 113}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-runtimeMinutes-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"runtimeMinutes\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"runtimeMinutes\" IS NOT NULL\n        GROUP BY \"runtimeMinutes\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:16:45+00:00", "index": 114}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-runtimeMinutes-profiling-aggregates:\n\nSELECT\n    avg(\"runtimeMinutes\") as average\n    , sum(\"runtimeMinutes\") as sum\n    , var_samp(\"runtimeMinutes\") as variance\n    , stddev_samp(\"runtimeMinutes\") as standard_deviation\n    , count(distinct(\"runtimeMinutes\")) as distinct_values\n    , sum(case when \"runtimeMinutes\" is null then 1 else 0 end) as missing_values\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:16:57+00:00", "index": 115}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-runtimeMinutes-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"runtimeMinutes\" AS value_, count(*) AS frequency_\n                           FROM title_basics_model\n                           WHERE \"runtimeMinutes\" IS NOT NULL\n                           GROUP BY \"runtimeMinutes\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 2859 THEN frequency_ END),\nSUM(CASE WHEN 2859 <= value_ AND value_ < 5718 THEN frequency_ END),\nSUM(CASE WHEN 5718 <= value_ AND value_ < 8577 THEN frequency_ END),\nSUM(CASE WHEN 8577 <= value_ AND value_ < 11436 THEN frequency_ END),\nSUM(CASE WHEN 11436 <= value_ AND value_ < 14295 THEN frequency_ END),\nSUM(CASE WHEN 14295 <= value_ AND value_ < 17154 THEN frequency_ END),\nSUM(CASE WHEN 17154 <= value_ AND value_ < 20013 THEN frequency_ END),\nSUM(CASE WHEN 20013 <= value_ AND value_ < 22872 THEN frequency_ END),\nSUM(CASE WHEN 22872 <= value_ AND value_ < 25731 THEN frequency_ END),\nSUM(CASE WHEN 25731 <= value_ AND value_ < 28590 THEN frequency_ END),\nSUM(CASE WHEN 28590 <= value_ AND value_ < 31449 THEN frequency_ END),\nSUM(CASE WHEN 31449 <= value_ AND value_ < 34308 THEN frequency_ END),\nSUM(CASE WHEN 34308 <= value_ AND value_ < 37167 THEN frequency_ END),\nSUM(CASE WHEN 37167 <= value_ AND value_ < 40026 THEN frequency_ END),\nSUM(CASE WHEN 40026 <= value_ AND value_ < 42885 THEN frequency_ END),\nSUM(CASE WHEN 42885 <= value_ AND value_ < 45744 THEN frequency_ END),\nSUM(CASE WHEN 45744 <= value_ AND value_ < 48603 THEN frequency_ END),\nSUM(CASE WHEN 48603 <= value_ AND value_ < 51462 THEN frequency_ END),\nSUM(CASE WHEN 51462 <= value_ AND value_ < 54321 THEN frequency_ END),\nSUM(CASE WHEN 54321 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:17:02+00:00", "index": 116}, {"level": "debug", "message": "Profiling column genres of title_basics_model", "timestamp": "2023-10-31T13:17:07+00:00", "index": 117}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_basics_model-genres-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"genres\" AS value_, count(*) AS frequency_\n        FROM title_basics_model\n        WHERE \"genres\" IS NOT NULL\n        GROUP BY \"genres\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:17:07+00:00", "index": 118}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_basics_model, genres: get textual aggregates:\n\nSELECT\n    count(distinct(\"genres\")) as distinct_values\n    , sum(case when \"genres\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"genres\")) as avg_length\n    , min(length(\"genres\")) as min_length\n    , max(length(\"genres\")) as max_length\nFROM title_basics_model\n", "timestamp": "2023-10-31T13:17:13+00:00", "index": 119}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_crew_model_cleansed:\nSELECT COUNT(*) from \"title_crew_model_cleansed\"", "timestamp": "2023-10-31T13:17:19+00:00", "index": 120}, {"level": "info", "message": "  - title_crew_model_cleansed", "timestamp": "2023-10-31T13:17:44+00:00", "index": 121}, {"level": "debug", "message": "Profiling column tconst of title_crew_model_cleansed", "timestamp": "2023-10-31T13:17:44+00:00", "index": 122}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_crew_model_cleansed-tconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:17:44+00:00", "index": 123}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_crew_model_cleansed, tconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_crew_model_cleansed\n", "timestamp": "2023-10-31T13:18:58+00:00", "index": 124}, {"level": "debug", "message": "Profiling column writers of title_crew_model_cleansed", "timestamp": "2023-10-31T13:19:21+00:00", "index": 125}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_crew_model_cleansed-writers-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"writers\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"writers\" IS NOT NULL\n        GROUP BY \"writers\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:19:21+00:00", "index": 126}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_crew_model_cleansed, writers: get textual aggregates:\n\nSELECT\n    count(distinct(\"writers\")) as distinct_values\n    , sum(case when \"writers\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"writers\")) as avg_length\n    , min(length(\"writers\")) as min_length\n    , max(length(\"writers\")) as max_length\nFROM title_crew_model_cleansed\n", "timestamp": "2023-10-31T13:19:49+00:00", "index": 127}, {"level": "debug", "message": "Profiling column directors of title_crew_model_cleansed", "timestamp": "2023-10-31T13:20:14+00:00", "index": 128}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_crew_model_cleansed-directors-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"directors\" AS value_, count(*) AS frequency_\n        FROM title_crew_model_cleansed\n        WHERE \"directors\" IS NOT NULL\n        GROUP BY \"directors\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:20:14+00:00", "index": 129}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_crew_model_cleansed, directors: get textual aggregates:\n\nSELECT\n    count(distinct(\"directors\")) as distinct_values\n    , sum(case when \"directors\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"directors\")) as avg_length\n    , min(length(\"directors\")) as min_length\n    , max(length(\"directors\")) as max_length\nFROM title_crew_model_cleansed\n", "timestamp": "2023-10-31T13:20:41+00:00", "index": 130}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_episode_model:\nSELECT COUNT(*) from \"title_episode_model\"", "timestamp": "2023-10-31T13:21:05+00:00", "index": 131}, {"level": "info", "message": "  - title_episode_model", "timestamp": "2023-10-31T13:21:06+00:00", "index": 132}, {"level": "debug", "message": "Profiling column tconst of title_episode_model", "timestamp": "2023-10-31T13:21:06+00:00", "index": 133}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-tconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:21:06+00:00", "index": 134}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_episode_model, tconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_episode_model\n", "timestamp": "2023-10-31T13:23:47+00:00", "index": 135}, {"level": "debug", "message": "Profiling column parentTconst of title_episode_model", "timestamp": "2023-10-31T13:23:48+00:00", "index": 136}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-parentTconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"parentTconst\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"parentTconst\" IS NOT NULL\n        GROUP BY \"parentTconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:23:48+00:00", "index": 137}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_episode_model, parentTconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"parentTconst\")) as distinct_values\n    , sum(case when \"parentTconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"parentTconst\")) as avg_length\n    , min(length(\"parentTconst\")) as min_length\n    , max(length(\"parentTconst\")) as max_length\nFROM title_episode_model\n", "timestamp": "2023-10-31T13:23:50+00:00", "index": 138}, {"level": "debug", "message": "Profiling column seasonNumber of title_episode_model", "timestamp": "2023-10-31T13:23:51+00:00", "index": 139}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-seasonNumber-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"seasonNumber\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"seasonNumber\" IS NOT NULL\n        GROUP BY \"seasonNumber\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:23:51+00:00", "index": 140}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-seasonNumber-profiling-aggregates:\n\nSELECT\n    avg(\"seasonNumber\") as average\n    , sum(\"seasonNumber\") as sum\n    , var_samp(\"seasonNumber\") as variance\n    , stddev_samp(\"seasonNumber\") as standard_deviation\n    , count(distinct(\"seasonNumber\")) as distinct_values\n    , sum(case when \"seasonNumber\" is null then 1 else 0 end) as missing_values\nFROM title_episode_model\n", "timestamp": "2023-10-31T13:23:55+00:00", "index": 141}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-seasonNumber-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"seasonNumber\" AS value_, count(*) AS frequency_\n                           FROM title_episode_model\n                           WHERE \"seasonNumber\" IS NOT NULL\n                           GROUP BY \"seasonNumber\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 107.32 THEN frequency_ END),\nSUM(CASE WHEN 107.32 <= value_ AND value_ < 213.63 THEN frequency_ END),\nSUM(CASE WHEN 213.63 <= value_ AND value_ < 319.95 THEN frequency_ END),\nSUM(CASE WHEN 319.95 <= value_ AND value_ < 426.26 THEN frequency_ END),\nSUM(CASE WHEN 426.26 <= value_ AND value_ < 532.58 THEN frequency_ END),\nSUM(CASE WHEN 532.58 <= value_ AND value_ < 638.89 THEN frequency_ END),\nSUM(CASE WHEN 638.89 <= value_ AND value_ < 745.21 THEN frequency_ END),\nSUM(CASE WHEN 745.21 <= value_ AND value_ < 851.53 THEN frequency_ END),\nSUM(CASE WHEN 851.53 <= value_ AND value_ < 957.84 THEN frequency_ END),\nSUM(CASE WHEN 957.84 <= value_ AND value_ < 1064.16 THEN frequency_ END),\nSUM(CASE WHEN 1064.16 <= value_ AND value_ < 1170.47 THEN frequency_ END),\nSUM(CASE WHEN 1170.47 <= value_ AND value_ < 1276.79 THEN frequency_ END),\nSUM(CASE WHEN 1276.79 <= value_ AND value_ < 1383.11 THEN frequency_ END),\nSUM(CASE WHEN 1383.11 <= value_ AND value_ < 1489.42 THEN frequency_ END),\nSUM(CASE WHEN 1489.42 <= value_ AND value_ < 1595.74 THEN frequency_ END),\nSUM(CASE WHEN 1595.74 <= value_ AND value_ < 1702.05 THEN frequency_ END),\nSUM(CASE WHEN 1702.05 <= value_ AND value_ < 1808.37 THEN frequency_ END),\nSUM(CASE WHEN 1808.37 <= value_ AND value_ < 1914.68 THEN frequency_ END),\nSUM(CASE WHEN 1914.68 <= value_ AND value_ < 2021.0 THEN frequency_ END),\nSUM(CASE WHEN 2021.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:23:56+00:00", "index": 142}, {"level": "debug", "message": "Profiling column episodeNumber of title_episode_model", "timestamp": "2023-10-31T13:23:58+00:00", "index": 143}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-episodeNumber-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"episodeNumber\" AS value_, count(*) AS frequency_\n        FROM title_episode_model\n        WHERE \"episodeNumber\" IS NOT NULL\n        GROUP BY \"episodeNumber\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:23:58+00:00", "index": 144}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-episodeNumber-profiling-aggregates:\n\nSELECT\n    avg(\"episodeNumber\") as average\n    , sum(\"episodeNumber\") as sum\n    , var_samp(\"episodeNumber\") as variance\n    , stddev_samp(\"episodeNumber\") as standard_deviation\n    , count(distinct(\"episodeNumber\")) as distinct_values\n    , sum(case when \"episodeNumber\" is null then 1 else 0 end) as missing_values\nFROM title_episode_model\n", "timestamp": "2023-10-31T13:24:02+00:00", "index": 145}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_episode_model-episodeNumber-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"episodeNumber\" AS value_, count(*) AS frequency_\n                           FROM title_episode_model\n                           WHERE \"episodeNumber\" IS NOT NULL\n                           GROUP BY \"episodeNumber\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 4807.05 THEN frequency_ END),\nSUM(CASE WHEN 4807.05 <= value_ AND value_ < 9614.11 THEN frequency_ END),\nSUM(CASE WHEN 9614.11 <= value_ AND value_ < 14421.16 THEN frequency_ END),\nSUM(CASE WHEN 14421.16 <= value_ AND value_ < 19228.21 THEN frequency_ END),\nSUM(CASE WHEN 19228.21 <= value_ AND value_ < 24035.26 THEN frequency_ END),\nSUM(CASE WHEN 24035.26 <= value_ AND value_ < 28842.32 THEN frequency_ END),\nSUM(CASE WHEN 28842.32 <= value_ AND value_ < 33649.37 THEN frequency_ END),\nSUM(CASE WHEN 33649.37 <= value_ AND value_ < 38456.42 THEN frequency_ END),\nSUM(CASE WHEN 38456.42 <= value_ AND value_ < 43263.47 THEN frequency_ END),\nSUM(CASE WHEN 43263.47 <= value_ AND value_ < 48070.53 THEN frequency_ END),\nSUM(CASE WHEN 48070.53 <= value_ AND value_ < 52877.58 THEN frequency_ END),\nSUM(CASE WHEN 52877.58 <= value_ AND value_ < 57684.63 THEN frequency_ END),\nSUM(CASE WHEN 57684.63 <= value_ AND value_ < 62491.68 THEN frequency_ END),\nSUM(CASE WHEN 62491.68 <= value_ AND value_ < 67298.74 THEN frequency_ END),\nSUM(CASE WHEN 67298.74 <= value_ AND value_ < 72105.79 THEN frequency_ END),\nSUM(CASE WHEN 72105.79 <= value_ AND value_ < 76912.84 THEN frequency_ END),\nSUM(CASE WHEN 76912.84 <= value_ AND value_ < 81719.89 THEN frequency_ END),\nSUM(CASE WHEN 81719.89 <= value_ AND value_ < 86526.95 THEN frequency_ END),\nSUM(CASE WHEN 86526.95 <= value_ AND value_ < 91334.0 THEN frequency_ END),\nSUM(CASE WHEN 91334.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:24:04+00:00", "index": 146}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_principals_model_cleansed:\nSELECT COUNT(*) from \"title_principals_model_cleansed\"", "timestamp": "2023-10-31T13:24:05+00:00", "index": 147}, {"level": "info", "message": "  - title_principals_model_cleansed", "timestamp": "2023-10-31T13:24:33+00:00", "index": 148}, {"level": "debug", "message": "Profiling column tconst of title_principals_model_cleansed", "timestamp": "2023-10-31T13:24:33+00:00", "index": 149}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-tconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:24:33+00:00", "index": 150}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_principals_model_cleansed, tconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:25:49+00:00", "index": 151}, {"level": "debug", "message": "Profiling column ordering of title_principals_model_cleansed", "timestamp": "2023-10-31T13:26:17+00:00", "index": 152}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-ordering-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"ordering\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"ordering\" IS NOT NULL\n        GROUP BY \"ordering\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:26:17+00:00", "index": 153}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-ordering-profiling-aggregates:\n\nSELECT\n    avg(\"ordering\") as average\n    , sum(\"ordering\") as sum\n    , var_samp(\"ordering\") as variance\n    , stddev_samp(\"ordering\") as standard_deviation\n    , count(distinct(\"ordering\")) as distinct_values\n    , sum(case when \"ordering\" is null then 1 else 0 end) as missing_values\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:27:55+00:00", "index": 154}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-ordering-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"ordering\" AS value_, count(*) AS frequency_\n                           FROM title_principals_model_cleansed\n                           WHERE \"ordering\" IS NOT NULL\n                           GROUP BY \"ordering\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 2 THEN frequency_ END),\nSUM(CASE WHEN 2 <= value_ AND value_ < 3 THEN frequency_ END),\nSUM(CASE WHEN 3 <= value_ AND value_ < 4 THEN frequency_ END),\nSUM(CASE WHEN 4 <= value_ AND value_ < 5 THEN frequency_ END),\nSUM(CASE WHEN 5 <= value_ AND value_ < 6 THEN frequency_ END),\nSUM(CASE WHEN 6 <= value_ AND value_ < 7 THEN frequency_ END),\nSUM(CASE WHEN 7 <= value_ AND value_ < 8 THEN frequency_ END),\nSUM(CASE WHEN 8 <= value_ AND value_ < 9 THEN frequency_ END),\nSUM(CASE WHEN 9 <= value_ AND value_ < 10 THEN frequency_ END),\nSUM(CASE WHEN 10 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:28:22+00:00", "index": 155}, {"level": "debug", "message": "Profiling column nconst of title_principals_model_cleansed", "timestamp": "2023-10-31T13:28:49+00:00", "index": 156}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-nconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"nconst\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"nconst\" IS NOT NULL\n        GROUP BY \"nconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:28:49+00:00", "index": 157}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_principals_model_cleansed, nconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"nconst\")) as distinct_values\n    , sum(case when \"nconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"nconst\")) as avg_length\n    , min(length(\"nconst\")) as min_length\n    , max(length(\"nconst\")) as max_length\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:29:49+00:00", "index": 158}, {"level": "debug", "message": "Profiling column category of title_principals_model_cleansed", "timestamp": "2023-10-31T13:30:16+00:00", "index": 159}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-category-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"category\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"category\" IS NOT NULL\n        GROUP BY \"category\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:30:16+00:00", "index": 160}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_principals_model_cleansed, category: get textual aggregates:\n\nSELECT\n    count(distinct(\"category\")) as distinct_values\n    , sum(case when \"category\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"category\")) as avg_length\n    , min(length(\"category\")) as min_length\n    , max(length(\"category\")) as max_length\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:30:43+00:00", "index": 161}, {"level": "debug", "message": "Profiling column job of title_principals_model_cleansed", "timestamp": "2023-10-31T13:31:13+00:00", "index": 162}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-job-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"job\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"job\" IS NOT NULL\n        GROUP BY \"job\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:31:13+00:00", "index": 163}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_principals_model_cleansed, job: get textual aggregates:\n\nSELECT\n    count(distinct(\"job\")) as distinct_values\n    , sum(case when \"job\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"job\")) as avg_length\n    , min(length(\"job\")) as min_length\n    , max(length(\"job\")) as max_length\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:31:37+00:00", "index": 164}, {"level": "debug", "message": "Profiling column characters of title_principals_model_cleansed", "timestamp": "2023-10-31T13:32:04+00:00", "index": 165}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_principals_model_cleansed-characters-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"characters\" AS value_, count(*) AS frequency_\n        FROM title_principals_model_cleansed\n        WHERE \"characters\" IS NOT NULL\n        GROUP BY \"characters\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:32:04+00:00", "index": 166}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_principals_model_cleansed, characters: get textual aggregates:\n\nSELECT\n    count(distinct(\"characters\")) as distinct_values\n    , sum(case when \"characters\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"characters\")) as avg_length\n    , min(length(\"characters\")) as min_length\n    , max(length(\"characters\")) as max_length\nFROM title_principals_model_cleansed\n", "timestamp": "2023-10-31T13:32:57+00:00", "index": 167}, {"level": "debug", "message": "Query imdb_dataset.get_row_count_title_ratings_model:\nSELECT COUNT(*) from \"title_ratings_model\"", "timestamp": "2023-10-31T13:33:26+00:00", "index": 168}, {"level": "info", "message": "  - title_ratings_model", "timestamp": "2023-10-31T13:33:26+00:00", "index": 169}, {"level": "debug", "message": "Profiling column tconst of title_ratings_model", "timestamp": "2023-10-31T13:33:26+00:00", "index": 170}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-tconst-value-frequencies-text:\n\nWITH\n    value_frequencies AS (\n        SELECT \"tconst\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"tconst\" IS NOT NULL\n        GROUP BY \"tconst\"\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    )\nSELECT *\nFROM frequent_values\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:33:26+00:00", "index": 171}, {"level": "debug", "message": "Query imdb_dataset.profiling: title_ratings_model, tconst: get textual aggregates:\n\nSELECT\n    count(distinct(\"tconst\")) as distinct_values\n    , sum(case when \"tconst\" is null then 1 else 0 end) as missing_values\n    , avg(length(\"tconst\")) as avg_length\n    , min(length(\"tconst\")) as min_length\n    , max(length(\"tconst\")) as max_length\nFROM title_ratings_model\n", "timestamp": "2023-10-31T13:33:30+00:00", "index": 172}, {"level": "debug", "message": "Profiling column averageRating of title_ratings_model", "timestamp": "2023-10-31T13:33:31+00:00", "index": 173}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-averageRating-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"averageRating\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"averageRating\" IS NOT NULL\n        GROUP BY \"averageRating\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:33:31+00:00", "index": 174}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-averageRating-profiling-aggregates:\n\nSELECT\n    avg(\"averageRating\") as average\n    , sum(\"averageRating\") as sum\n    , var_samp(\"averageRating\") as variance\n    , stddev_samp(\"averageRating\") as standard_deviation\n    , count(distinct(\"averageRating\")) as distinct_values\n    , sum(case when \"averageRating\" is null then 1 else 0 end) as missing_values\nFROM title_ratings_model\n", "timestamp": "2023-10-31T13:33:31+00:00", "index": 175}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-averageRating-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"averageRating\" AS value_, count(*) AS frequency_\n                           FROM title_ratings_model\n                           WHERE \"averageRating\" IS NOT NULL\n                           GROUP BY \"averageRating\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 1.47 THEN frequency_ END),\nSUM(CASE WHEN 1.47 <= value_ AND value_ < 1.95 THEN frequency_ END),\nSUM(CASE WHEN 1.95 <= value_ AND value_ < 2.42 THEN frequency_ END),\nSUM(CASE WHEN 2.42 <= value_ AND value_ < 2.89 THEN frequency_ END),\nSUM(CASE WHEN 2.89 <= value_ AND value_ < 3.37 THEN frequency_ END),\nSUM(CASE WHEN 3.37 <= value_ AND value_ < 3.84 THEN frequency_ END),\nSUM(CASE WHEN 3.84 <= value_ AND value_ < 4.32 THEN frequency_ END),\nSUM(CASE WHEN 4.32 <= value_ AND value_ < 4.79 THEN frequency_ END),\nSUM(CASE WHEN 4.79 <= value_ AND value_ < 5.26 THEN frequency_ END),\nSUM(CASE WHEN 5.26 <= value_ AND value_ < 5.74 THEN frequency_ END),\nSUM(CASE WHEN 5.74 <= value_ AND value_ < 6.21 THEN frequency_ END),\nSUM(CASE WHEN 6.21 <= value_ AND value_ < 6.68 THEN frequency_ END),\nSUM(CASE WHEN 6.68 <= value_ AND value_ < 7.16 THEN frequency_ END),\nSUM(CASE WHEN 7.16 <= value_ AND value_ < 7.63 THEN frequency_ END),\nSUM(CASE WHEN 7.63 <= value_ AND value_ < 8.11 THEN frequency_ END),\nSUM(CASE WHEN 8.11 <= value_ AND value_ < 8.58 THEN frequency_ END),\nSUM(CASE WHEN 8.58 <= value_ AND value_ < 9.05 THEN frequency_ END),\nSUM(CASE WHEN 9.05 <= value_ AND value_ < 9.53 THEN frequency_ END),\nSUM(CASE WHEN 9.53 <= value_ AND value_ < 10.0 THEN frequency_ END),\nSUM(CASE WHEN 10.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:33:31+00:00", "index": 176}, {"level": "debug", "message": "Profiling column numVotes of title_ratings_model", "timestamp": "2023-10-31T13:33:32+00:00", "index": 177}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-numVotes-value-frequencies-numeric:\n\nWITH\n    value_frequencies AS (\n        SELECT \"numVotes\" AS value_, count(*) AS frequency_\n        FROM title_ratings_model\n        WHERE \"numVotes\" IS NOT NULL\n        GROUP BY \"numVotes\"\n    ),\n    mins AS (\n        SELECT CAST('mins' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ ASC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ ASC\n        LIMIT 5\n    ),\n    maxs AS (\n        SELECT CAST('maxs' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY value_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        WHERE value_ IS NOT NULL\n        ORDER BY value_ DESC\n        LIMIT 5\n    ),\n    frequent_values AS (\n        SELECT CAST('frequent_values' AS VARCHAR) AS metric_, ROW_NUMBER() OVER(ORDER BY frequency_ DESC) AS index_, value_, frequency_\n        FROM value_frequencies\n        ORDER BY frequency_ desc\n        LIMIT 10\n    ),\n    results AS (\n        SELECT * FROM mins\n        UNION\n        SELECT * FROM maxs\n        UNION\n        SELECT * FROM frequent_values\n    )\nSELECT *\nFROM results\nORDER BY metric_ ASC, index_ ASC\n", "timestamp": "2023-10-31T13:33:32+00:00", "index": 178}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-numVotes-profiling-aggregates:\n\nSELECT\n    avg(\"numVotes\") as average\n    , sum(\"numVotes\") as sum\n    , var_samp(\"numVotes\") as variance\n    , stddev_samp(\"numVotes\") as standard_deviation\n    , count(distinct(\"numVotes\")) as distinct_values\n    , sum(case when \"numVotes\" is null then 1 else 0 end) as missing_values\nFROM title_ratings_model\n", "timestamp": "2023-10-31T13:33:32+00:00", "index": 179}, {"level": "debug", "message": "Query imdb_dataset.profiling-title_ratings_model-numVotes-histogram:\n\n           WITH\n               value_frequencies AS (\n                           SELECT \"numVotes\" AS value_, count(*) AS frequency_\n                           FROM title_ratings_model\n                           WHERE \"numVotes\" IS NOT NULL\n                           GROUP BY \"numVotes\"\n                       )\n           SELECT SUM(CASE WHEN value_ < 147920.53 THEN frequency_ END),\nSUM(CASE WHEN 147920.53 <= value_ AND value_ < 295836.05 THEN frequency_ END),\nSUM(CASE WHEN 295836.05 <= value_ AND value_ < 443751.58 THEN frequency_ END),\nSUM(CASE WHEN 443751.58 <= value_ AND value_ < 591667.11 THEN frequency_ END),\nSUM(CASE WHEN 591667.11 <= value_ AND value_ < 739582.63 THEN frequency_ END),\nSUM(CASE WHEN 739582.63 <= value_ AND value_ < 887498.16 THEN frequency_ END),\nSUM(CASE WHEN 887498.16 <= value_ AND value_ < 1035413.68 THEN frequency_ END),\nSUM(CASE WHEN 1035413.68 <= value_ AND value_ < 1183329.21 THEN frequency_ END),\nSUM(CASE WHEN 1183329.21 <= value_ AND value_ < 1331244.74 THEN frequency_ END),\nSUM(CASE WHEN 1331244.74 <= value_ AND value_ < 1479160.26 THEN frequency_ END),\nSUM(CASE WHEN 1479160.26 <= value_ AND value_ < 1627075.79 THEN frequency_ END),\nSUM(CASE WHEN 1627075.79 <= value_ AND value_ < 1774991.32 THEN frequency_ END),\nSUM(CASE WHEN 1774991.32 <= value_ AND value_ < 1922906.84 THEN frequency_ END),\nSUM(CASE WHEN 1922906.84 <= value_ AND value_ < 2070822.37 THEN frequency_ END),\nSUM(CASE WHEN 2070822.37 <= value_ AND value_ < 2218737.89 THEN frequency_ END),\nSUM(CASE WHEN 2218737.89 <= value_ AND value_ < 2366653.42 THEN frequency_ END),\nSUM(CASE WHEN 2366653.42 <= value_ AND value_ < 2514568.95 THEN frequency_ END),\nSUM(CASE WHEN 2514568.95 <= value_ AND value_ < 2662484.47 THEN frequency_ END),\nSUM(CASE WHEN 2662484.47 <= value_ AND value_ < 2810400.0 THEN frequency_ END),\nSUM(CASE WHEN 2810400.0 <= value_ THEN frequency_ END)\n           FROM value_frequencies", "timestamp": "2023-10-31T13:33:33+00:00", "index": 180}, {"level": "info", "message": "Scan summary:", "timestamp": "2023-10-31T13:33:33+00:00", "index": 181}, {"level": "debug", "message": "110/110 queries OK", "timestamp": "2023-10-31T13:33:33+00:00", "index": 182}, {"level": "debug", "message": "  imdb_dataset.discover-tables-find-tables-and-row-counts [OK] 0:00:00.038614", "timestamp": "2023-10-31T13:33:33+00:00", "index": 183}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-language_codes [OK] 0:00:00.013412", "timestamp": "2023-10-31T13:33:33+00:00", "index": 184}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-genres [OK] 0:00:00.013352", "timestamp": "2023-10-31T13:33:33+00:00", "index": 185}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-countries_with_regional_codes [OK] 0:00:00.012616", "timestamp": "2023-10-31T13:33:33+00:00", "index": 186}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-distribution_types [OK] 0:00:00.012865", "timestamp": "2023-10-31T13:33:33+00:00", "index": 187}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-job_categories [OK] 0:00:00.014090", "timestamp": "2023-10-31T13:33:33+00:00", "index": 188}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_types [OK] 0:00:00.012057", "timestamp": "2023-10-31T13:33:33+00:00", "index": 189}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_crew_model_cleansed [OK] 0:00:00.012951", "timestamp": "2023-10-31T13:33:33+00:00", "index": 190}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_ratings_model [OK] 0:00:00.014195", "timestamp": "2023-10-31T13:33:33+00:00", "index": 191}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_episode_model [OK] 0:00:00.014871", "timestamp": "2023-10-31T13:33:33+00:00", "index": 192}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_basics_model [OK] 0:00:00.016140", "timestamp": "2023-10-31T13:33:33+00:00", "index": 193}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-name_basics_model [OK] 0:00:00.012940", "timestamp": "2023-10-31T13:33:33+00:00", "index": 194}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_akas_model [OK] 0:00:00.014578", "timestamp": "2023-10-31T13:33:33+00:00", "index": 195}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_crew_model [OK] 0:00:00.013241", "timestamp": "2023-10-31T13:33:33+00:00", "index": 196}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_principals_model [OK] 0:00:00.014478", "timestamp": "2023-10-31T13:33:33+00:00", "index": 197}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_akas_model_cleansed [OK] 0:00:00.014398", "timestamp": "2023-10-31T13:33:33+00:00", "index": 198}, {"level": "debug", "message": "  imdb_dataset.discover-tables-column-metadata-for-title_principals_model_cleansed [OK] 0:00:00.015703", "timestamp": "2023-10-31T13:33:33+00:00", "index": 199}, {"level": "debug", "message": "  imdb_dataset.profile-columns-get-table-and-column-metadata [OK] 0:00:00.016188", "timestamp": "2023-10-31T13:33:33+00:00", "index": 200}, {"level": "debug", "message": "  imdb_dataset.get_row_count_name_basics_model [OK] 0:00:04.851855", "timestamp": "2023-10-31T13:33:33+00:00", "index": 201}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-nconst-value-frequencies-text [OK] 0:06:12.239079", "timestamp": "2023-10-31T13:33:33+00:00", "index": 202}, {"level": "debug", "message": "  imdb_dataset.profiling: name_basics_model, nconst: get textual aggregates [OK] 0:00:05.833970", "timestamp": "2023-10-31T13:33:33+00:00", "index": 203}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-primaryName-value-frequencies-text [OK] 0:03:44.528989", "timestamp": "2023-10-31T13:33:33+00:00", "index": 204}, {"level": "debug", "message": "  imdb_dataset.profiling: name_basics_model, primaryName: get textual aggregates [OK] 0:00:06.104876", "timestamp": "2023-10-31T13:33:33+00:00", "index": 205}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-birthYear-value-frequencies-numeric [OK] 0:00:15.933416", "timestamp": "2023-10-31T13:33:33+00:00", "index": 206}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-birthYear-profiling-aggregates [OK] 0:00:05.192991", "timestamp": "2023-10-31T13:33:33+00:00", "index": 207}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-birthYear-histogram [OK] 0:00:05.228210", "timestamp": "2023-10-31T13:33:33+00:00", "index": 208}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-deathYear-value-frequencies-numeric [OK] 0:00:16.333053", "timestamp": "2023-10-31T13:33:33+00:00", "index": 209}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-deathYear-profiling-aggregates [OK] 0:00:05.247896", "timestamp": "2023-10-31T13:33:33+00:00", "index": 210}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-deathYear-histogram [OK] 0:00:05.154310", "timestamp": "2023-10-31T13:33:33+00:00", "index": 211}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-primaryProfession-value-frequencies-text [OK] 0:00:06.547989", "timestamp": "2023-10-31T13:33:33+00:00", "index": 212}, {"level": "debug", "message": "  imdb_dataset.profiling: name_basics_model, primaryProfession: get textual aggregates [OK] 0:00:06.095582", "timestamp": "2023-10-31T13:33:33+00:00", "index": 213}, {"level": "debug", "message": "  imdb_dataset.profiling-name_basics_model-knownForTitles-value-frequencies-text [OK] 0:06:04.647691", "timestamp": "2023-10-31T13:33:33+00:00", "index": 214}, {"level": "debug", "message": "  imdb_dataset.profiling: name_basics_model, knownForTitles: get textual aggregates [OK] 0:00:06.681763", "timestamp": "2023-10-31T13:33:33+00:00", "index": 215}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_akas_model_cleansed [OK] 0:00:16.009437", "timestamp": "2023-10-31T13:33:33+00:00", "index": 216}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-titleId-value-frequencies-text [OK] 0:01:24.210001", "timestamp": "2023-10-31T13:33:33+00:00", "index": 217}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, titleId: get textual aggregates [OK] 0:00:16.956719", "timestamp": "2023-10-31T13:33:33+00:00", "index": 218}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-ordering-value-frequencies-numeric [OK] 0:00:54.948335", "timestamp": "2023-10-31T13:33:33+00:00", "index": 219}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-ordering-profiling-aggregates [OK] 0:00:16.751988", "timestamp": "2023-10-31T13:33:33+00:00", "index": 220}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-ordering-histogram [OK] 0:00:17.152004", "timestamp": "2023-10-31T13:33:33+00:00", "index": 221}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-title-value-frequencies-text [OK] 0:00:39.095383", "timestamp": "2023-10-31T13:33:33+00:00", "index": 222}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, title: get textual aggregates [OK] 0:00:17.685549", "timestamp": "2023-10-31T13:33:33+00:00", "index": 223}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-region-value-frequencies-text [OK] 0:00:16.576444", "timestamp": "2023-10-31T13:33:33+00:00", "index": 224}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, region: get textual aggregates [OK] 0:00:16.765191", "timestamp": "2023-10-31T13:33:33+00:00", "index": 225}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-language-value-frequencies-text [OK] 0:00:16.437450", "timestamp": "2023-10-31T13:33:33+00:00", "index": 226}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, language: get textual aggregates [OK] 0:00:16.419526", "timestamp": "2023-10-31T13:33:33+00:00", "index": 227}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-types-value-frequencies-text [OK] 0:00:17.258822", "timestamp": "2023-10-31T13:33:33+00:00", "index": 228}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, types: get textual aggregates [OK] 0:00:16.964693", "timestamp": "2023-10-31T13:33:33+00:00", "index": 229}, {"level": "debug", "message": "  imdb_dataset.profiling-title_akas_model_cleansed-attributes-value-frequencies-text [OK] 0:00:16.960197", "timestamp": "2023-10-31T13:33:33+00:00", "index": 230}, {"level": "debug", "message": "  imdb_dataset.profiling: title_akas_model_cleansed, attributes: get textual aggregates [OK] 0:00:16.957922", "timestamp": "2023-10-31T13:33:33+00:00", "index": 231}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_basics_model [OK] 0:00:04.826721", "timestamp": "2023-10-31T13:33:33+00:00", "index": 232}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-tconst-value-frequencies-text [OK] 0:05:13.256203", "timestamp": "2023-10-31T13:33:33+00:00", "index": 233}, {"level": "debug", "message": "  imdb_dataset.profiling: title_basics_model, tconst: get textual aggregates [OK] 0:00:05.158135", "timestamp": "2023-10-31T13:33:33+00:00", "index": 234}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-titleType-value-frequencies-text [OK] 0:00:04.725681", "timestamp": "2023-10-31T13:33:33+00:00", "index": 235}, {"level": "debug", "message": "  imdb_dataset.profiling: title_basics_model, titleType: get textual aggregates [OK] 0:00:04.852307", "timestamp": "2023-10-31T13:33:33+00:00", "index": 236}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-primaryTitle-value-frequencies-text [OK] 0:00:50.069454", "timestamp": "2023-10-31T13:33:33+00:00", "index": 237}, {"level": "debug", "message": "  imdb_dataset.profiling: title_basics_model, primaryTitle: get textual aggregates [OK] 0:00:05.911894", "timestamp": "2023-10-31T13:33:33+00:00", "index": 238}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-originalTitle-value-frequencies-text [OK] 0:00:53.968843", "timestamp": "2023-10-31T13:33:33+00:00", "index": 239}, {"level": "debug", "message": "  imdb_dataset.profiling: title_basics_model, originalTitle: get textual aggregates [OK] 0:00:05.313444", "timestamp": "2023-10-31T13:33:33+00:00", "index": 240}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-startYear-value-frequencies-numeric [OK] 0:00:15.865183", "timestamp": "2023-10-31T13:33:33+00:00", "index": 241}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-startYear-profiling-aggregates [OK] 0:00:04.727790", "timestamp": "2023-10-31T13:33:33+00:00", "index": 242}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-startYear-histogram [OK] 0:00:04.938572", "timestamp": "2023-10-31T13:33:33+00:00", "index": 243}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-endYear-value-frequencies-numeric [OK] 0:00:14.895927", "timestamp": "2023-10-31T13:33:33+00:00", "index": 244}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-endYear-profiling-aggregates [OK] 0:00:05.401125", "timestamp": "2023-10-31T13:33:33+00:00", "index": 245}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-endYear-histogram [OK] 0:00:05.168507", "timestamp": "2023-10-31T13:33:33+00:00", "index": 246}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-runtimeMinutes-value-frequencies-numeric [OK] 0:00:11.922944", "timestamp": "2023-10-31T13:33:33+00:00", "index": 247}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-runtimeMinutes-profiling-aggregates [OK] 0:00:04.758617", "timestamp": "2023-10-31T13:33:33+00:00", "index": 248}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-runtimeMinutes-histogram [OK] 0:00:04.742747", "timestamp": "2023-10-31T13:33:33+00:00", "index": 249}, {"level": "debug", "message": "  imdb_dataset.profiling-title_basics_model-genres-value-frequencies-text [OK] 0:00:06.029613", "timestamp": "2023-10-31T13:33:33+00:00", "index": 250}, {"level": "debug", "message": "  imdb_dataset.profiling: title_basics_model, genres: get textual aggregates [OK] 0:00:05.889083", "timestamp": "2023-10-31T13:33:33+00:00", "index": 251}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_crew_model_cleansed [OK] 0:00:24.755418", "timestamp": "2023-10-31T13:33:33+00:00", "index": 252}, {"level": "debug", "message": "  imdb_dataset.profiling-title_crew_model_cleansed-tconst-value-frequencies-text [OK] 0:01:14.386231", "timestamp": "2023-10-31T13:33:33+00:00", "index": 253}, {"level": "debug", "message": "  imdb_dataset.profiling: title_crew_model_cleansed, tconst: get textual aggregates [OK] 0:00:23.351844", "timestamp": "2023-10-31T13:33:33+00:00", "index": 254}, {"level": "debug", "message": "  imdb_dataset.profiling-title_crew_model_cleansed-writers-value-frequencies-text [OK] 0:00:28.077974", "timestamp": "2023-10-31T13:33:33+00:00", "index": 255}, {"level": "debug", "message": "  imdb_dataset.profiling: title_crew_model_cleansed, writers: get textual aggregates [OK] 0:00:24.718167", "timestamp": "2023-10-31T13:33:33+00:00", "index": 256}, {"level": "debug", "message": "  imdb_dataset.profiling-title_crew_model_cleansed-directors-value-frequencies-text [OK] 0:00:27.149493", "timestamp": "2023-10-31T13:33:33+00:00", "index": 257}, {"level": "debug", "message": "  imdb_dataset.profiling: title_crew_model_cleansed, directors: get textual aggregates [OK] 0:00:24.030354", "timestamp": "2023-10-31T13:33:33+00:00", "index": 258}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_episode_model [OK] 0:00:01.256647", "timestamp": "2023-10-31T13:33:33+00:00", "index": 259}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-tconst-value-frequencies-text [OK] 0:02:40.214589", "timestamp": "2023-10-31T13:33:33+00:00", "index": 260}, {"level": "debug", "message": "  imdb_dataset.profiling: title_episode_model, tconst: get textual aggregates [OK] 0:00:01.553942", "timestamp": "2023-10-31T13:33:33+00:00", "index": 261}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-parentTconst-value-frequencies-text [OK] 0:00:01.377935", "timestamp": "2023-10-31T13:33:33+00:00", "index": 262}, {"level": "debug", "message": "  imdb_dataset.profiling: title_episode_model, parentTconst: get textual aggregates [OK] 0:00:01.279424", "timestamp": "2023-10-31T13:33:33+00:00", "index": 263}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-seasonNumber-value-frequencies-numeric [OK] 0:00:03.969905", "timestamp": "2023-10-31T13:33:33+00:00", "index": 264}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-seasonNumber-profiling-aggregates [OK] 0:00:01.539412", "timestamp": "2023-10-31T13:33:33+00:00", "index": 265}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-seasonNumber-histogram [OK] 0:00:01.359873", "timestamp": "2023-10-31T13:33:33+00:00", "index": 266}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-episodeNumber-value-frequencies-numeric [OK] 0:00:04.654251", "timestamp": "2023-10-31T13:33:33+00:00", "index": 267}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-episodeNumber-profiling-aggregates [OK] 0:00:01.340294", "timestamp": "2023-10-31T13:33:33+00:00", "index": 268}, {"level": "debug", "message": "  imdb_dataset.profiling-title_episode_model-episodeNumber-histogram [OK] 0:00:01.351426", "timestamp": "2023-10-31T13:33:33+00:00", "index": 269}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_principals_model_cleansed [OK] 0:00:27.720079", "timestamp": "2023-10-31T13:33:33+00:00", "index": 270}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-tconst-value-frequencies-text [OK] 0:01:15.860189", "timestamp": "2023-10-31T13:33:33+00:00", "index": 271}, {"level": "debug", "message": "  imdb_dataset.profiling: title_principals_model_cleansed, tconst: get textual aggregates [OK] 0:00:28.221239", "timestamp": "2023-10-31T13:33:33+00:00", "index": 272}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-ordering-value-frequencies-numeric [OK] 0:01:38.083326", "timestamp": "2023-10-31T13:33:33+00:00", "index": 273}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-ordering-profiling-aggregates [OK] 0:00:26.624863", "timestamp": "2023-10-31T13:33:33+00:00", "index": 274}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-ordering-histogram [OK] 0:00:27.135680", "timestamp": "2023-10-31T13:33:33+00:00", "index": 275}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-nconst-value-frequencies-text [OK] 0:00:59.788528", "timestamp": "2023-10-31T13:33:33+00:00", "index": 276}, {"level": "debug", "message": "  imdb_dataset.profiling: title_principals_model_cleansed, nconst: get textual aggregates [OK] 0:00:26.993599", "timestamp": "2023-10-31T13:33:33+00:00", "index": 277}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-category-value-frequencies-text [OK] 0:00:27.090045", "timestamp": "2023-10-31T13:33:33+00:00", "index": 278}, {"level": "debug", "message": "  imdb_dataset.profiling: title_principals_model_cleansed, category: get textual aggregates [OK] 0:00:30.526471", "timestamp": "2023-10-31T13:33:33+00:00", "index": 279}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-job-value-frequencies-text [OK] 0:00:23.944690", "timestamp": "2023-10-31T13:33:33+00:00", "index": 280}, {"level": "debug", "message": "  imdb_dataset.profiling: title_principals_model_cleansed, job: get textual aggregates [OK] 0:00:26.639689", "timestamp": "2023-10-31T13:33:33+00:00", "index": 281}, {"level": "debug", "message": "  imdb_dataset.profiling-title_principals_model_cleansed-characters-value-frequencies-text [OK] 0:00:53.565686", "timestamp": "2023-10-31T13:33:33+00:00", "index": 282}, {"level": "debug", "message": "  imdb_dataset.profiling: title_principals_model_cleansed, characters: get textual aggregates [OK] 0:00:28.721036", "timestamp": "2023-10-31T13:33:33+00:00", "index": 283}, {"level": "debug", "message": "  imdb_dataset.get_row_count_title_ratings_model [OK] 0:00:00.194059", "timestamp": "2023-10-31T13:33:33+00:00", "index": 284}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-tconst-value-frequencies-text [OK] 0:00:04.222770", "timestamp": "2023-10-31T13:33:33+00:00", "index": 285}, {"level": "debug", "message": "  imdb_dataset.profiling: title_ratings_model, tconst: get textual aggregates [OK] 0:00:00.255619", "timestamp": "2023-10-31T13:33:33+00:00", "index": 286}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-averageRating-value-frequencies-numeric [OK] 0:00:00.547682", "timestamp": "2023-10-31T13:33:33+00:00", "index": 287}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-averageRating-profiling-aggregates [OK] 0:00:00.207227", "timestamp": "2023-10-31T13:33:33+00:00", "index": 288}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-averageRating-histogram [OK] 0:00:00.209807", "timestamp": "2023-10-31T13:33:33+00:00", "index": 289}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-numVotes-value-frequencies-numeric [OK] 0:00:00.555299", "timestamp": "2023-10-31T13:33:33+00:00", "index": 290}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-numVotes-profiling-aggregates [OK] 0:00:00.206686", "timestamp": "2023-10-31T13:33:33+00:00", "index": 291}, {"level": "debug", "message": "  imdb_dataset.profiling-title_ratings_model-numVotes-histogram [OK] 0:00:00.208934", "timestamp": "2023-10-31T13:33:33+00:00", "index": 292}, {"level": "warning", "message": "No valid checks found, 0 checks evaluated.", "timestamp": "2023-10-31T13:33:33+00:00", "index": 293}], "sourceOwner": "soda-core"}